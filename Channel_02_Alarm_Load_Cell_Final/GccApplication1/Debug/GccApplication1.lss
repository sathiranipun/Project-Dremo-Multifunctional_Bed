
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000018ca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000d2  00800060  000018ca  0000195e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000007f  00800132  00800132  00001a30  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001a30  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001a8c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00001ac8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002dd5  00000000  00000000  00001cb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b35  00000000  00000000  00004a8d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000017c9  00000000  00000000  000055c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004ec  00000000  00000000  00006d8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007d2  00000000  00000000  00007278  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001cf8  00000000  00000000  00007a4a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f8  00000000  00000000  00009742  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea ec       	ldi	r30, 0xCA	; 202
      68:	f8 e1       	ldi	r31, 0x18	; 24
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a2 33       	cpi	r26, 0x32	; 50
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	21 e0       	ldi	r18, 0x01	; 1
      78:	a2 e3       	ldi	r26, 0x32	; 50
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a1 3b       	cpi	r26, 0xB1	; 177
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 26 06 	call	0xc4c	; 0xc4c <main>
      8a:	0c 94 63 0c 	jmp	0x18c6	; 0x18c6 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <hx711_read>:
 */
void hx711_calibrate2setscale(double weight) {
	hx711_setscale(0);
	double scale = hx711_getweight()/weight;
	hx711_setscale(scale);
}
      92:	b0 99       	sbic	0x16, 0	; 22
      94:	fe cf       	rjmp	.-4      	; 0x92 <hx711_read>
      96:	28 e1       	ldi	r18, 0x18	; 24
      98:	80 e0       	ldi	r24, 0x00	; 0
      9a:	90 e0       	ldi	r25, 0x00	; 0
      9c:	dc 01       	movw	r26, r24
      9e:	c1 9a       	sbi	0x18, 1	; 24
      a0:	00 00       	nop
      a2:	88 0f       	add	r24, r24
      a4:	99 1f       	adc	r25, r25
      a6:	aa 1f       	adc	r26, r26
      a8:	bb 1f       	adc	r27, r27
      aa:	c1 98       	cbi	0x18, 1	; 24
      ac:	00 00       	nop
      ae:	b0 9b       	sbis	0x16, 0	; 22
      b0:	03 c0       	rjmp	.+6      	; 0xb8 <hx711_read+0x26>
      b2:	01 96       	adiw	r24, 0x01	; 1
      b4:	a1 1d       	adc	r26, r1
      b6:	b1 1d       	adc	r27, r1
      b8:	21 50       	subi	r18, 0x01	; 1
      ba:	89 f7       	brne	.-30     	; 0x9e <hx711_read+0xc>
      bc:	68 94       	set
      be:	15 f8       	bld	r1, 5
      c0:	b6 95       	lsr	r27
      c2:	a7 95       	ror	r26
      c4:	97 95       	ror	r25
      c6:	87 95       	ror	r24
      c8:	16 94       	lsr	r1
      ca:	d1 f7       	brne	.-12     	; 0xc0 <hx711_read+0x2e>
      cc:	bc 01       	movw	r22, r24
      ce:	cd 01       	movw	r24, r26
      d0:	80 58       	subi	r24, 0x80	; 128
      d2:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <hx711_gain>
      d6:	22 23       	and	r18, r18
      d8:	49 f0       	breq	.+18     	; 0xec <hx711_read+0x5a>
      da:	20 e0       	ldi	r18, 0x00	; 0
      dc:	c1 9a       	sbi	0x18, 1	; 24
      de:	00 00       	nop
      e0:	c1 98       	cbi	0x18, 1	; 24
      e2:	2f 5f       	subi	r18, 0xFF	; 255
      e4:	30 91 3a 01 	lds	r19, 0x013A	; 0x80013a <hx711_gain>
      e8:	23 17       	cp	r18, r19
      ea:	c0 f3       	brcs	.-16     	; 0xdc <hx711_read+0x4a>
      ec:	08 95       	ret

000000ee <hx711_readwithtare>:
      ee:	cf 92       	push	r12
      f0:	df 92       	push	r13
      f2:	ef 92       	push	r14
      f4:	ff 92       	push	r15
      f6:	0e 94 49 00 	call	0x92	; 0x92 <hx711_read>
      fa:	0e 94 3b 08 	call	0x1076	; 0x1076 <__floatunsisf>
      fe:	6b 01       	movw	r12, r22
     100:	7c 01       	movw	r14, r24
     102:	60 91 32 01 	lds	r22, 0x0132	; 0x800132 <__data_end>
     106:	70 91 33 01 	lds	r23, 0x0133	; 0x800133 <__data_end+0x1>
     10a:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end+0x2>
     10e:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x3>
     112:	0e 94 3d 08 	call	0x107a	; 0x107a <__floatsisf>
     116:	9b 01       	movw	r18, r22
     118:	ac 01       	movw	r20, r24
     11a:	c7 01       	movw	r24, r14
     11c:	b6 01       	movw	r22, r12
     11e:	0e 94 57 07 	call	0xeae	; 0xeae <__subsf3>
     122:	ff 90       	pop	r15
     124:	ef 90       	pop	r14
     126:	df 90       	pop	r13
     128:	cf 90       	pop	r12
     12a:	08 95       	ret

0000012c <hx711_getweight>:
     12c:	0e 94 77 00 	call	0xee	; 0xee <hx711_readwithtare>
     130:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <hx711_scale>
     134:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <hx711_scale+0x1>
     138:	40 91 38 01 	lds	r20, 0x0138	; 0x800138 <hx711_scale+0x2>
     13c:	50 91 39 01 	lds	r21, 0x0139	; 0x800139 <hx711_scale+0x3>
     140:	0e 94 c9 07 	call	0xf92	; 0xf92 <__divsf3>
     144:	08 95       	ret

00000146 <hx711_setgain>:
     146:	80 38       	cpi	r24, 0x80	; 128
     148:	91 05       	cpc	r25, r1
     14a:	21 f4       	brne	.+8      	; 0x154 <hx711_setgain+0xe>
     14c:	81 e0       	ldi	r24, 0x01	; 1
     14e:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <hx711_gain>
     152:	10 c0       	rjmp	.+32     	; 0x174 <hx711_setgain+0x2e>
     154:	80 34       	cpi	r24, 0x40	; 64
     156:	91 05       	cpc	r25, r1
     158:	21 f4       	brne	.+8      	; 0x162 <hx711_setgain+0x1c>
     15a:	83 e0       	ldi	r24, 0x03	; 3
     15c:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <hx711_gain>
     160:	09 c0       	rjmp	.+18     	; 0x174 <hx711_setgain+0x2e>
     162:	80 97       	sbiw	r24, 0x20	; 32
     164:	21 f4       	brne	.+8      	; 0x16e <hx711_setgain+0x28>
     166:	82 e0       	ldi	r24, 0x02	; 2
     168:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <hx711_gain>
     16c:	03 c0       	rjmp	.+6      	; 0x174 <hx711_setgain+0x2e>
     16e:	81 e0       	ldi	r24, 0x01	; 1
     170:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <hx711_gain>
     174:	c1 98       	cbi	0x18, 1	; 24
     176:	0e 94 49 00 	call	0x92	; 0x92 <hx711_read>
     17a:	08 95       	ret

0000017c <hx711_setscale>:
     17c:	cf 92       	push	r12
     17e:	df 92       	push	r13
     180:	ef 92       	push	r14
     182:	ff 92       	push	r15
     184:	6b 01       	movw	r12, r22
     186:	7c 01       	movw	r14, r24
     188:	20 e0       	ldi	r18, 0x00	; 0
     18a:	30 e0       	ldi	r19, 0x00	; 0
     18c:	40 e8       	ldi	r20, 0x80	; 128
     18e:	5f e3       	ldi	r21, 0x3F	; 63
     190:	0e 94 c4 07 	call	0xf88	; 0xf88 <__cmpsf2>
     194:	88 23       	and	r24, r24
     196:	44 f4       	brge	.+16     	; 0x1a8 <hx711_setscale+0x2c>
     198:	0f 2e       	mov	r0, r31
     19a:	c1 2c       	mov	r12, r1
     19c:	d1 2c       	mov	r13, r1
     19e:	f0 e8       	ldi	r31, 0x80	; 128
     1a0:	ef 2e       	mov	r14, r31
     1a2:	ff e3       	ldi	r31, 0x3F	; 63
     1a4:	ff 2e       	mov	r15, r31
     1a6:	f0 2d       	mov	r31, r0
     1a8:	c0 92 36 01 	sts	0x0136, r12	; 0x800136 <hx711_scale>
     1ac:	d0 92 37 01 	sts	0x0137, r13	; 0x800137 <hx711_scale+0x1>
     1b0:	e0 92 38 01 	sts	0x0138, r14	; 0x800138 <hx711_scale+0x2>
     1b4:	f0 92 39 01 	sts	0x0139, r15	; 0x800139 <hx711_scale+0x3>
     1b8:	ff 90       	pop	r15
     1ba:	ef 90       	pop	r14
     1bc:	df 90       	pop	r13
     1be:	cf 90       	pop	r12
     1c0:	08 95       	ret

000001c2 <hx711_init>:

/**
 * initialize chip
 */
void hx711_init(uint8_t gain, double scale, int32_t offset) {
     1c2:	8f 92       	push	r8
     1c4:	9f 92       	push	r9
     1c6:	af 92       	push	r10
     1c8:	bf 92       	push	r11
     1ca:	cf 92       	push	r12
     1cc:	df 92       	push	r13
     1ce:	ef 92       	push	r14
     1d0:	ff 92       	push	r15
     1d2:	0f 93       	push	r16
     1d4:	1f 93       	push	r17
     1d6:	4a 01       	movw	r8, r20
     1d8:	5b 01       	movw	r10, r22
     1da:	68 01       	movw	r12, r16
     1dc:	79 01       	movw	r14, r18
	//set sck as output
	HX711_SCKDDR |= (1<<HX711_SCKPINNUM);
     1de:	b9 9a       	sbi	0x17, 1	; 23
	HX711_SCKPORT &= ~(1<<HX711_SCKPINNUM);
     1e0:	c1 98       	cbi	0x18, 1	; 24
	//set dt as input
	HX711_DTDDR &=~ (1<<HX711_DTPINNUM);
     1e2:	b8 98       	cbi	0x17, 0	; 23

	//set gain
	hx711_setgain(gain);
     1e4:	90 e0       	ldi	r25, 0x00	; 0
     1e6:	0e 94 a3 00 	call	0x146	; 0x146 <hx711_setgain>
	//set scale
	hx711_setscale(scale);
     1ea:	c5 01       	movw	r24, r10
     1ec:	b4 01       	movw	r22, r8
     1ee:	0e 94 be 00 	call	0x17c	; 0x17c <hx711_setscale>

/**
 * set the offset raw value
 */
void hx711_setoffset(int32_t offset) {
	hx711_offset = offset;
     1f2:	c0 92 32 01 	sts	0x0132, r12	; 0x800132 <__data_end>
     1f6:	d0 92 33 01 	sts	0x0133, r13	; 0x800133 <__data_end+0x1>
     1fa:	e0 92 34 01 	sts	0x0134, r14	; 0x800134 <__data_end+0x2>
     1fe:	f0 92 35 01 	sts	0x0135, r15	; 0x800135 <__data_end+0x3>
	hx711_setgain(gain);
	//set scale
	hx711_setscale(scale);
	//set offset
	hx711_setoffset(offset);
}
     202:	1f 91       	pop	r17
     204:	0f 91       	pop	r16
     206:	ff 90       	pop	r15
     208:	ef 90       	pop	r14
     20a:	df 90       	pop	r13
     20c:	cf 90       	pop	r12
     20e:	bf 90       	pop	r11
     210:	af 90       	pop	r10
     212:	9f 90       	pop	r9
     214:	8f 90       	pop	r8
     216:	08 95       	ret

00000218 <I2C_Init>:
			I2C_Stop();										/* If not then generate stop condition */
			continue;										/* continue with start loop again */
		}
		break;												/* If yes then break loop */
	}
}
     218:	11 b8       	out	0x01, r1	; 1
     21a:	80 e2       	ldi	r24, 0x20	; 32
     21c:	80 b9       	out	0x00, r24	; 0
     21e:	08 95       	ret

00000220 <I2C_Start>:
     220:	94 ea       	ldi	r25, 0xA4	; 164
     222:	96 bf       	out	0x36, r25	; 54
     224:	06 b6       	in	r0, 0x36	; 54
     226:	07 fe       	sbrs	r0, 7
     228:	fd cf       	rjmp	.-6      	; 0x224 <I2C_Start+0x4>
     22a:	91 b1       	in	r25, 0x01	; 1
     22c:	98 7f       	andi	r25, 0xF8	; 248
     22e:	98 30       	cpi	r25, 0x08	; 8
     230:	71 f4       	brne	.+28     	; 0x24e <I2C_Start+0x2e>
     232:	83 b9       	out	0x03, r24	; 3
     234:	84 e8       	ldi	r24, 0x84	; 132
     236:	86 bf       	out	0x36, r24	; 54
     238:	06 b6       	in	r0, 0x36	; 54
     23a:	07 fe       	sbrs	r0, 7
     23c:	fd cf       	rjmp	.-6      	; 0x238 <I2C_Start+0x18>
     23e:	81 b1       	in	r24, 0x01	; 1
     240:	88 7f       	andi	r24, 0xF8	; 248
     242:	88 31       	cpi	r24, 0x18	; 24
     244:	31 f0       	breq	.+12     	; 0x252 <I2C_Start+0x32>
     246:	80 32       	cpi	r24, 0x20	; 32
     248:	31 f0       	breq	.+12     	; 0x256 <I2C_Start+0x36>
     24a:	83 e0       	ldi	r24, 0x03	; 3
     24c:	08 95       	ret
     24e:	80 e0       	ldi	r24, 0x00	; 0
     250:	08 95       	ret
     252:	81 e0       	ldi	r24, 0x01	; 1
     254:	08 95       	ret
     256:	82 e0       	ldi	r24, 0x02	; 2
     258:	08 95       	ret

0000025a <I2C_Repeated_Start>:
     25a:	94 ea       	ldi	r25, 0xA4	; 164
     25c:	96 bf       	out	0x36, r25	; 54
     25e:	06 b6       	in	r0, 0x36	; 54
     260:	07 fe       	sbrs	r0, 7
     262:	fd cf       	rjmp	.-6      	; 0x25e <I2C_Repeated_Start+0x4>
     264:	91 b1       	in	r25, 0x01	; 1
     266:	98 7f       	andi	r25, 0xF8	; 248
     268:	90 31       	cpi	r25, 0x10	; 16
     26a:	71 f4       	brne	.+28     	; 0x288 <I2C_Repeated_Start+0x2e>
     26c:	83 b9       	out	0x03, r24	; 3
     26e:	84 e8       	ldi	r24, 0x84	; 132
     270:	86 bf       	out	0x36, r24	; 54
     272:	06 b6       	in	r0, 0x36	; 54
     274:	07 fe       	sbrs	r0, 7
     276:	fd cf       	rjmp	.-6      	; 0x272 <I2C_Repeated_Start+0x18>
     278:	81 b1       	in	r24, 0x01	; 1
     27a:	88 7f       	andi	r24, 0xF8	; 248
     27c:	80 34       	cpi	r24, 0x40	; 64
     27e:	31 f0       	breq	.+12     	; 0x28c <I2C_Repeated_Start+0x32>
     280:	80 32       	cpi	r24, 0x20	; 32
     282:	31 f0       	breq	.+12     	; 0x290 <I2C_Repeated_Start+0x36>
     284:	83 e0       	ldi	r24, 0x03	; 3
     286:	08 95       	ret
     288:	80 e0       	ldi	r24, 0x00	; 0
     28a:	08 95       	ret
     28c:	81 e0       	ldi	r24, 0x01	; 1
     28e:	08 95       	ret
     290:	82 e0       	ldi	r24, 0x02	; 2
     292:	08 95       	ret

00000294 <I2C_Stop>:
     294:	84 e9       	ldi	r24, 0x94	; 148
     296:	86 bf       	out	0x36, r24	; 54
     298:	06 b6       	in	r0, 0x36	; 54
     29a:	04 fc       	sbrc	r0, 4
     29c:	fd cf       	rjmp	.-6      	; 0x298 <I2C_Stop+0x4>
     29e:	08 95       	ret

000002a0 <I2C_Write>:

uint8_t I2C_Write(char data)								/* I2C write function */
{
	uint8_t status;											/* Declare variable */
	TWDR = data;											/* Copy data in TWI data register */
     2a0:	83 b9       	out	0x03, r24	; 3
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
     2a2:	84 e8       	ldi	r24, 0x84	; 132
     2a4:	86 bf       	out	0x36, r24	; 54
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
     2a6:	06 b6       	in	r0, 0x36	; 54
     2a8:	07 fe       	sbrs	r0, 7
     2aa:	fd cf       	rjmp	.-6      	; 0x2a6 <I2C_Write+0x6>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
     2ac:	81 b1       	in	r24, 0x01	; 1
     2ae:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x28)										/* Check weather data transmitted & ack received or not? */
     2b0:	88 32       	cpi	r24, 0x28	; 40
     2b2:	21 f0       	breq	.+8      	; 0x2bc <I2C_Write+0x1c>
	return 0;												/* If yes then return 0 to indicate ack received */
	if (status == 0x30)										/* Check weather data transmitted & nack received or not? */
     2b4:	80 33       	cpi	r24, 0x30	; 48
     2b6:	21 f0       	breq	.+8      	; 0x2c0 <I2C_Write+0x20>
	return 1;												/* If yes then return 1 to indicate nack received */
	else
	return 2;												/* Else return 2 to indicate data transmission failed */
     2b8:	82 e0       	ldi	r24, 0x02	; 2
     2ba:	08 95       	ret
	TWDR = data;											/* Copy data in TWI data register */
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status == 0x28)										/* Check weather data transmitted & ack received or not? */
	return 0;												/* If yes then return 0 to indicate ack received */
     2bc:	80 e0       	ldi	r24, 0x00	; 0
     2be:	08 95       	ret
	if (status == 0x30)										/* Check weather data transmitted & nack received or not? */
	return 1;												/* If yes then return 1 to indicate nack received */
     2c0:	81 e0       	ldi	r24, 0x01	; 1
	else
	return 2;												/* Else return 2 to indicate data transmission failed */
}
     2c2:	08 95       	ret

000002c4 <I2C_Read_Ack>:

int I2C_Read_Ack()											/* I2C read ack function */
{
	TWCR=(1<<TWEN)|(1<<TWINT)|(1<<TWEA);					/* Enable TWI, generation of ack and clear interrupt flag */
     2c4:	84 ec       	ldi	r24, 0xC4	; 196
     2c6:	86 bf       	out	0x36, r24	; 54
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (read operation) */
     2c8:	06 b6       	in	r0, 0x36	; 54
     2ca:	07 fe       	sbrs	r0, 7
     2cc:	fd cf       	rjmp	.-6      	; 0x2c8 <I2C_Read_Ack+0x4>
	return TWDR;											/* Return received data */
     2ce:	83 b1       	in	r24, 0x03	; 3
}	
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	08 95       	ret

000002d4 <I2C_Read_Nack>:

int I2C_Read_Nack()										/* I2C read nack function */
{
	TWCR=(1<<TWEN)|(1<<TWINT);								/* Enable TWI and clear interrupt flag */
     2d4:	84 e8       	ldi	r24, 0x84	; 132
     2d6:	86 bf       	out	0x36, r24	; 54
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (read operation) */
     2d8:	06 b6       	in	r0, 0x36	; 54
     2da:	07 fe       	sbrs	r0, 7
     2dc:	fd cf       	rjmp	.-6      	; 0x2d8 <I2C_Read_Nack+0x4>
	return TWDR;											/* Return received data */
     2de:	83 b1       	in	r24, 0x03	; 3
}	
     2e0:	90 e0       	ldi	r25, 0x00	; 0
     2e2:	08 95       	ret

000002e4 <pinChange>:
			fun1();
			break;
		}

	}
}
     2e4:	67 2b       	or	r22, r23
     2e6:	09 f0       	breq	.+2      	; 0x2ea <pinChange+0x6>
     2e8:	9f c0       	rjmp	.+318    	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     2ea:	00 97       	sbiw	r24, 0x00	; 0
     2ec:	11 f4       	brne	.+4      	; 0x2f2 <pinChange+0xe>
     2ee:	d8 98       	cbi	0x1b, 0	; 27
     2f0:	08 95       	ret
     2f2:	81 30       	cpi	r24, 0x01	; 1
     2f4:	91 05       	cpc	r25, r1
     2f6:	11 f4       	brne	.+4      	; 0x2fc <pinChange+0x18>
     2f8:	d9 98       	cbi	0x1b, 1	; 27
     2fa:	08 95       	ret
     2fc:	82 30       	cpi	r24, 0x02	; 2
     2fe:	91 05       	cpc	r25, r1
     300:	11 f4       	brne	.+4      	; 0x306 <pinChange+0x22>
     302:	da 98       	cbi	0x1b, 2	; 27
     304:	08 95       	ret
     306:	83 30       	cpi	r24, 0x03	; 3
     308:	91 05       	cpc	r25, r1
     30a:	11 f4       	brne	.+4      	; 0x310 <pinChange+0x2c>
     30c:	db 98       	cbi	0x1b, 3	; 27
     30e:	08 95       	ret
     310:	84 30       	cpi	r24, 0x04	; 4
     312:	91 05       	cpc	r25, r1
     314:	11 f4       	brne	.+4      	; 0x31a <pinChange+0x36>
     316:	dc 98       	cbi	0x1b, 4	; 27
     318:	08 95       	ret
     31a:	85 30       	cpi	r24, 0x05	; 5
     31c:	91 05       	cpc	r25, r1
     31e:	11 f4       	brne	.+4      	; 0x324 <pinChange+0x40>
     320:	dd 98       	cbi	0x1b, 5	; 27
     322:	08 95       	ret
     324:	86 30       	cpi	r24, 0x06	; 6
     326:	91 05       	cpc	r25, r1
     328:	11 f4       	brne	.+4      	; 0x32e <pinChange+0x4a>
     32a:	de 98       	cbi	0x1b, 6	; 27
     32c:	08 95       	ret
     32e:	87 30       	cpi	r24, 0x07	; 7
     330:	91 05       	cpc	r25, r1
     332:	11 f4       	brne	.+4      	; 0x338 <pinChange+0x54>
     334:	df 98       	cbi	0x1b, 7	; 27
     336:	08 95       	ret
     338:	8a 30       	cpi	r24, 0x0A	; 10
     33a:	91 05       	cpc	r25, r1
     33c:	11 f4       	brne	.+4      	; 0x342 <pinChange+0x5e>
     33e:	c0 98       	cbi	0x18, 0	; 24
     340:	08 95       	ret
     342:	8b 30       	cpi	r24, 0x0B	; 11
     344:	91 05       	cpc	r25, r1
     346:	11 f4       	brne	.+4      	; 0x34c <pinChange+0x68>
     348:	c1 98       	cbi	0x18, 1	; 24
     34a:	08 95       	ret
     34c:	8c 30       	cpi	r24, 0x0C	; 12
     34e:	91 05       	cpc	r25, r1
     350:	11 f4       	brne	.+4      	; 0x356 <pinChange+0x72>
     352:	c2 98       	cbi	0x18, 2	; 24
     354:	08 95       	ret
     356:	8d 30       	cpi	r24, 0x0D	; 13
     358:	91 05       	cpc	r25, r1
     35a:	11 f4       	brne	.+4      	; 0x360 <pinChange+0x7c>
     35c:	c3 98       	cbi	0x18, 3	; 24
     35e:	08 95       	ret
     360:	8e 30       	cpi	r24, 0x0E	; 14
     362:	91 05       	cpc	r25, r1
     364:	11 f4       	brne	.+4      	; 0x36a <pinChange+0x86>
     366:	c4 98       	cbi	0x18, 4	; 24
     368:	08 95       	ret
     36a:	8f 30       	cpi	r24, 0x0F	; 15
     36c:	91 05       	cpc	r25, r1
     36e:	11 f4       	brne	.+4      	; 0x374 <pinChange+0x90>
     370:	c5 98       	cbi	0x18, 5	; 24
     372:	08 95       	ret
     374:	80 31       	cpi	r24, 0x10	; 16
     376:	91 05       	cpc	r25, r1
     378:	11 f4       	brne	.+4      	; 0x37e <pinChange+0x9a>
     37a:	c6 98       	cbi	0x18, 6	; 24
     37c:	08 95       	ret
     37e:	81 31       	cpi	r24, 0x11	; 17
     380:	91 05       	cpc	r25, r1
     382:	11 f4       	brne	.+4      	; 0x388 <pinChange+0xa4>
     384:	c7 98       	cbi	0x18, 7	; 24
     386:	08 95       	ret
     388:	84 31       	cpi	r24, 0x14	; 20
     38a:	91 05       	cpc	r25, r1
     38c:	11 f4       	brne	.+4      	; 0x392 <pinChange+0xae>
     38e:	a8 98       	cbi	0x15, 0	; 21
     390:	08 95       	ret
     392:	85 31       	cpi	r24, 0x15	; 21
     394:	91 05       	cpc	r25, r1
     396:	11 f4       	brne	.+4      	; 0x39c <pinChange+0xb8>
     398:	a9 98       	cbi	0x15, 1	; 21
     39a:	08 95       	ret
     39c:	86 31       	cpi	r24, 0x16	; 22
     39e:	91 05       	cpc	r25, r1
     3a0:	11 f4       	brne	.+4      	; 0x3a6 <pinChange+0xc2>
     3a2:	aa 98       	cbi	0x15, 2	; 21
     3a4:	08 95       	ret
     3a6:	87 31       	cpi	r24, 0x17	; 23
     3a8:	91 05       	cpc	r25, r1
     3aa:	11 f4       	brne	.+4      	; 0x3b0 <pinChange+0xcc>
     3ac:	ab 98       	cbi	0x15, 3	; 21
     3ae:	08 95       	ret
     3b0:	88 31       	cpi	r24, 0x18	; 24
     3b2:	91 05       	cpc	r25, r1
     3b4:	11 f4       	brne	.+4      	; 0x3ba <pinChange+0xd6>
     3b6:	ac 98       	cbi	0x15, 4	; 21
     3b8:	08 95       	ret
     3ba:	89 31       	cpi	r24, 0x19	; 25
     3bc:	91 05       	cpc	r25, r1
     3be:	11 f4       	brne	.+4      	; 0x3c4 <pinChange+0xe0>
     3c0:	ad 98       	cbi	0x15, 5	; 21
     3c2:	08 95       	ret
     3c4:	8a 31       	cpi	r24, 0x1A	; 26
     3c6:	91 05       	cpc	r25, r1
     3c8:	11 f4       	brne	.+4      	; 0x3ce <pinChange+0xea>
     3ca:	ae 98       	cbi	0x15, 6	; 21
     3cc:	08 95       	ret
     3ce:	8b 31       	cpi	r24, 0x1B	; 27
     3d0:	91 05       	cpc	r25, r1
     3d2:	11 f4       	brne	.+4      	; 0x3d8 <pinChange+0xf4>
     3d4:	af 98       	cbi	0x15, 7	; 21
     3d6:	08 95       	ret
     3d8:	8e 31       	cpi	r24, 0x1E	; 30
     3da:	91 05       	cpc	r25, r1
     3dc:	11 f4       	brne	.+4      	; 0x3e2 <pinChange+0xfe>
     3de:	90 98       	cbi	0x12, 0	; 18
     3e0:	08 95       	ret
     3e2:	8f 31       	cpi	r24, 0x1F	; 31
     3e4:	91 05       	cpc	r25, r1
     3e6:	11 f4       	brne	.+4      	; 0x3ec <pinChange+0x108>
     3e8:	91 98       	cbi	0x12, 1	; 18
     3ea:	08 95       	ret
     3ec:	80 32       	cpi	r24, 0x20	; 32
     3ee:	91 05       	cpc	r25, r1
     3f0:	11 f4       	brne	.+4      	; 0x3f6 <pinChange+0x112>
     3f2:	92 98       	cbi	0x12, 2	; 18
     3f4:	08 95       	ret
     3f6:	81 32       	cpi	r24, 0x21	; 33
     3f8:	91 05       	cpc	r25, r1
     3fa:	11 f4       	brne	.+4      	; 0x400 <__LOCK_REGION_LENGTH__>
     3fc:	93 98       	cbi	0x12, 3	; 18
     3fe:	08 95       	ret
     400:	82 32       	cpi	r24, 0x22	; 34
     402:	91 05       	cpc	r25, r1
     404:	11 f4       	brne	.+4      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     406:	94 98       	cbi	0x12, 4	; 18
     408:	08 95       	ret
     40a:	83 32       	cpi	r24, 0x23	; 35
     40c:	91 05       	cpc	r25, r1
     40e:	11 f4       	brne	.+4      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
     410:	95 98       	cbi	0x12, 5	; 18
     412:	08 95       	ret
     414:	84 32       	cpi	r24, 0x24	; 36
     416:	91 05       	cpc	r25, r1
     418:	11 f4       	brne	.+4      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
     41a:	96 98       	cbi	0x12, 6	; 18
     41c:	08 95       	ret
     41e:	85 97       	sbiw	r24, 0x25	; 37
     420:	09 f0       	breq	.+2      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
     422:	9f c0       	rjmp	.+318    	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
     424:	97 98       	cbi	0x12, 7	; 18
     426:	08 95       	ret
     428:	00 97       	sbiw	r24, 0x00	; 0
     42a:	11 f4       	brne	.+4      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
     42c:	d8 9a       	sbi	0x1b, 0	; 27
     42e:	08 95       	ret
     430:	81 30       	cpi	r24, 0x01	; 1
     432:	91 05       	cpc	r25, r1
     434:	11 f4       	brne	.+4      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     436:	d9 9a       	sbi	0x1b, 1	; 27
     438:	08 95       	ret
     43a:	82 30       	cpi	r24, 0x02	; 2
     43c:	91 05       	cpc	r25, r1
     43e:	11 f4       	brne	.+4      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     440:	da 9a       	sbi	0x1b, 2	; 27
     442:	08 95       	ret
     444:	83 30       	cpi	r24, 0x03	; 3
     446:	91 05       	cpc	r25, r1
     448:	11 f4       	brne	.+4      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     44a:	db 9a       	sbi	0x1b, 3	; 27
     44c:	08 95       	ret
     44e:	84 30       	cpi	r24, 0x04	; 4
     450:	91 05       	cpc	r25, r1
     452:	11 f4       	brne	.+4      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
     454:	dc 9a       	sbi	0x1b, 4	; 27
     456:	08 95       	ret
     458:	85 30       	cpi	r24, 0x05	; 5
     45a:	91 05       	cpc	r25, r1
     45c:	11 f4       	brne	.+4      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
     45e:	dd 9a       	sbi	0x1b, 5	; 27
     460:	08 95       	ret
     462:	86 30       	cpi	r24, 0x06	; 6
     464:	91 05       	cpc	r25, r1
     466:	11 f4       	brne	.+4      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
     468:	de 9a       	sbi	0x1b, 6	; 27
     46a:	08 95       	ret
     46c:	87 30       	cpi	r24, 0x07	; 7
     46e:	91 05       	cpc	r25, r1
     470:	11 f4       	brne	.+4      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
     472:	df 9a       	sbi	0x1b, 7	; 27
     474:	08 95       	ret
     476:	8a 30       	cpi	r24, 0x0A	; 10
     478:	91 05       	cpc	r25, r1
     47a:	11 f4       	brne	.+4      	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
     47c:	c0 9a       	sbi	0x18, 0	; 24
     47e:	08 95       	ret
     480:	8b 30       	cpi	r24, 0x0B	; 11
     482:	91 05       	cpc	r25, r1
     484:	11 f4       	brne	.+4      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
     486:	c1 9a       	sbi	0x18, 1	; 24
     488:	08 95       	ret
     48a:	8c 30       	cpi	r24, 0x0C	; 12
     48c:	91 05       	cpc	r25, r1
     48e:	11 f4       	brne	.+4      	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
     490:	c2 9a       	sbi	0x18, 2	; 24
     492:	08 95       	ret
     494:	8d 30       	cpi	r24, 0x0D	; 13
     496:	91 05       	cpc	r25, r1
     498:	11 f4       	brne	.+4      	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
     49a:	c3 9a       	sbi	0x18, 3	; 24
     49c:	08 95       	ret
     49e:	8e 30       	cpi	r24, 0x0E	; 14
     4a0:	91 05       	cpc	r25, r1
     4a2:	11 f4       	brne	.+4      	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
     4a4:	c4 9a       	sbi	0x18, 4	; 24
     4a6:	08 95       	ret
     4a8:	8f 30       	cpi	r24, 0x0F	; 15
     4aa:	91 05       	cpc	r25, r1
     4ac:	11 f4       	brne	.+4      	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
     4ae:	c5 9a       	sbi	0x18, 5	; 24
     4b0:	08 95       	ret
     4b2:	80 31       	cpi	r24, 0x10	; 16
     4b4:	91 05       	cpc	r25, r1
     4b6:	11 f4       	brne	.+4      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
     4b8:	c6 9a       	sbi	0x18, 6	; 24
     4ba:	08 95       	ret
     4bc:	81 31       	cpi	r24, 0x11	; 17
     4be:	91 05       	cpc	r25, r1
     4c0:	11 f4       	brne	.+4      	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
     4c2:	c7 9a       	sbi	0x18, 7	; 24
     4c4:	08 95       	ret
     4c6:	84 31       	cpi	r24, 0x14	; 20
     4c8:	91 05       	cpc	r25, r1
     4ca:	11 f4       	brne	.+4      	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
     4cc:	a8 9a       	sbi	0x15, 0	; 21
     4ce:	08 95       	ret
     4d0:	85 31       	cpi	r24, 0x15	; 21
     4d2:	91 05       	cpc	r25, r1
     4d4:	11 f4       	brne	.+4      	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
     4d6:	a9 9a       	sbi	0x15, 1	; 21
     4d8:	08 95       	ret
     4da:	86 31       	cpi	r24, 0x16	; 22
     4dc:	91 05       	cpc	r25, r1
     4de:	11 f4       	brne	.+4      	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
     4e0:	aa 9a       	sbi	0x15, 2	; 21
     4e2:	08 95       	ret
     4e4:	87 31       	cpi	r24, 0x17	; 23
     4e6:	91 05       	cpc	r25, r1
     4e8:	11 f4       	brne	.+4      	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
     4ea:	ab 9a       	sbi	0x15, 3	; 21
     4ec:	08 95       	ret
     4ee:	88 31       	cpi	r24, 0x18	; 24
     4f0:	91 05       	cpc	r25, r1
     4f2:	11 f4       	brne	.+4      	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     4f4:	ac 9a       	sbi	0x15, 4	; 21
     4f6:	08 95       	ret
     4f8:	89 31       	cpi	r24, 0x19	; 25
     4fa:	91 05       	cpc	r25, r1
     4fc:	11 f4       	brne	.+4      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
     4fe:	ad 9a       	sbi	0x15, 5	; 21
     500:	08 95       	ret
     502:	8a 31       	cpi	r24, 0x1A	; 26
     504:	91 05       	cpc	r25, r1
     506:	11 f4       	brne	.+4      	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
     508:	ae 9a       	sbi	0x15, 6	; 21
     50a:	08 95       	ret
     50c:	8b 31       	cpi	r24, 0x1B	; 27
     50e:	91 05       	cpc	r25, r1
     510:	11 f4       	brne	.+4      	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
     512:	af 9a       	sbi	0x15, 7	; 21
     514:	08 95       	ret
     516:	8e 31       	cpi	r24, 0x1E	; 30
     518:	91 05       	cpc	r25, r1
     51a:	11 f4       	brne	.+4      	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
     51c:	90 9a       	sbi	0x12, 0	; 18
     51e:	08 95       	ret
     520:	8f 31       	cpi	r24, 0x1F	; 31
     522:	91 05       	cpc	r25, r1
     524:	11 f4       	brne	.+4      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
     526:	91 9a       	sbi	0x12, 1	; 18
     528:	08 95       	ret
     52a:	80 32       	cpi	r24, 0x20	; 32
     52c:	91 05       	cpc	r25, r1
     52e:	11 f4       	brne	.+4      	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
     530:	92 9a       	sbi	0x12, 2	; 18
     532:	08 95       	ret
     534:	81 32       	cpi	r24, 0x21	; 33
     536:	91 05       	cpc	r25, r1
     538:	11 f4       	brne	.+4      	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
     53a:	93 9a       	sbi	0x12, 3	; 18
     53c:	08 95       	ret
     53e:	82 32       	cpi	r24, 0x22	; 34
     540:	91 05       	cpc	r25, r1
     542:	11 f4       	brne	.+4      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
     544:	94 9a       	sbi	0x12, 4	; 18
     546:	08 95       	ret
     548:	83 32       	cpi	r24, 0x23	; 35
     54a:	91 05       	cpc	r25, r1
     54c:	11 f4       	brne	.+4      	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
     54e:	95 9a       	sbi	0x12, 5	; 18
     550:	08 95       	ret
     552:	84 32       	cpi	r24, 0x24	; 36
     554:	91 05       	cpc	r25, r1
     556:	11 f4       	brne	.+4      	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
     558:	96 9a       	sbi	0x12, 6	; 18
     55a:	08 95       	ret
     55c:	85 97       	sbiw	r24, 0x25	; 37
     55e:	09 f4       	brne	.+2      	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
     560:	97 9a       	sbi	0x12, 7	; 18
     562:	08 95       	ret

00000564 <Lcd4_Port>:
     564:	cf 93       	push	r28
     566:	c8 2f       	mov	r28, r24
     568:	80 ff       	sbrs	r24, 0
     56a:	07 c0       	rjmp	.+14     	; 0x57a <Lcd4_Port+0x16>
     56c:	61 e0       	ldi	r22, 0x01	; 1
     56e:	70 e0       	ldi	r23, 0x00	; 0
     570:	82 e2       	ldi	r24, 0x22	; 34
     572:	90 e0       	ldi	r25, 0x00	; 0
     574:	0e 94 72 01 	call	0x2e4	; 0x2e4 <pinChange>
     578:	06 c0       	rjmp	.+12     	; 0x586 <Lcd4_Port+0x22>
     57a:	60 e0       	ldi	r22, 0x00	; 0
     57c:	70 e0       	ldi	r23, 0x00	; 0
     57e:	82 e2       	ldi	r24, 0x22	; 34
     580:	90 e0       	ldi	r25, 0x00	; 0
     582:	0e 94 72 01 	call	0x2e4	; 0x2e4 <pinChange>
     586:	c1 ff       	sbrs	r28, 1
     588:	07 c0       	rjmp	.+14     	; 0x598 <Lcd4_Port+0x34>
     58a:	61 e0       	ldi	r22, 0x01	; 1
     58c:	70 e0       	ldi	r23, 0x00	; 0
     58e:	83 e2       	ldi	r24, 0x23	; 35
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	0e 94 72 01 	call	0x2e4	; 0x2e4 <pinChange>
     596:	06 c0       	rjmp	.+12     	; 0x5a4 <Lcd4_Port+0x40>
     598:	60 e0       	ldi	r22, 0x00	; 0
     59a:	70 e0       	ldi	r23, 0x00	; 0
     59c:	83 e2       	ldi	r24, 0x23	; 35
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	0e 94 72 01 	call	0x2e4	; 0x2e4 <pinChange>
     5a4:	c2 ff       	sbrs	r28, 2
     5a6:	07 c0       	rjmp	.+14     	; 0x5b6 <Lcd4_Port+0x52>
     5a8:	61 e0       	ldi	r22, 0x01	; 1
     5aa:	70 e0       	ldi	r23, 0x00	; 0
     5ac:	84 e2       	ldi	r24, 0x24	; 36
     5ae:	90 e0       	ldi	r25, 0x00	; 0
     5b0:	0e 94 72 01 	call	0x2e4	; 0x2e4 <pinChange>
     5b4:	06 c0       	rjmp	.+12     	; 0x5c2 <Lcd4_Port+0x5e>
     5b6:	60 e0       	ldi	r22, 0x00	; 0
     5b8:	70 e0       	ldi	r23, 0x00	; 0
     5ba:	84 e2       	ldi	r24, 0x24	; 36
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	0e 94 72 01 	call	0x2e4	; 0x2e4 <pinChange>
     5c2:	c3 ff       	sbrs	r28, 3
     5c4:	07 c0       	rjmp	.+14     	; 0x5d4 <Lcd4_Port+0x70>
     5c6:	61 e0       	ldi	r22, 0x01	; 1
     5c8:	70 e0       	ldi	r23, 0x00	; 0
     5ca:	85 e2       	ldi	r24, 0x25	; 37
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	0e 94 72 01 	call	0x2e4	; 0x2e4 <pinChange>
     5d2:	06 c0       	rjmp	.+12     	; 0x5e0 <Lcd4_Port+0x7c>
     5d4:	60 e0       	ldi	r22, 0x00	; 0
     5d6:	70 e0       	ldi	r23, 0x00	; 0
     5d8:	85 e2       	ldi	r24, 0x25	; 37
     5da:	90 e0       	ldi	r25, 0x00	; 0
     5dc:	0e 94 72 01 	call	0x2e4	; 0x2e4 <pinChange>
     5e0:	cf 91       	pop	r28
     5e2:	08 95       	ret

000005e4 <Lcd4_Cmd>:
     5e4:	cf 93       	push	r28
     5e6:	c8 2f       	mov	r28, r24
     5e8:	60 e0       	ldi	r22, 0x00	; 0
     5ea:	70 e0       	ldi	r23, 0x00	; 0
     5ec:	8a e1       	ldi	r24, 0x1A	; 26
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	0e 94 72 01 	call	0x2e4	; 0x2e4 <pinChange>
     5f4:	8c 2f       	mov	r24, r28
     5f6:	0e 94 b2 02 	call	0x564	; 0x564 <Lcd4_Port>
     5fa:	61 e0       	ldi	r22, 0x01	; 1
     5fc:	70 e0       	ldi	r23, 0x00	; 0
     5fe:	8b e1       	ldi	r24, 0x1B	; 27
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	0e 94 72 01 	call	0x2e4	; 0x2e4 <pinChange>
     606:	8f ec       	ldi	r24, 0xCF	; 207
     608:	97 e0       	ldi	r25, 0x07	; 7
     60a:	01 97       	sbiw	r24, 0x01	; 1
     60c:	f1 f7       	brne	.-4      	; 0x60a <Lcd4_Cmd+0x26>
     60e:	00 c0       	rjmp	.+0      	; 0x610 <Lcd4_Cmd+0x2c>
     610:	00 00       	nop
     612:	60 e0       	ldi	r22, 0x00	; 0
     614:	70 e0       	ldi	r23, 0x00	; 0
     616:	8b e1       	ldi	r24, 0x1B	; 27
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	0e 94 72 01 	call	0x2e4	; 0x2e4 <pinChange>
     61e:	8f ec       	ldi	r24, 0xCF	; 207
     620:	97 e0       	ldi	r25, 0x07	; 7
     622:	01 97       	sbiw	r24, 0x01	; 1
     624:	f1 f7       	brne	.-4      	; 0x622 <Lcd4_Cmd+0x3e>
     626:	00 c0       	rjmp	.+0      	; 0x628 <Lcd4_Cmd+0x44>
     628:	00 00       	nop
     62a:	cf 91       	pop	r28
     62c:	08 95       	ret

0000062e <Lcd4_Clear>:
     62e:	80 e0       	ldi	r24, 0x00	; 0
     630:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Cmd>
     634:	81 e0       	ldi	r24, 0x01	; 1
     636:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Cmd>
     63a:	08 95       	ret

0000063c <Lcd4_Set_Cursor>:
     63c:	cf 93       	push	r28
     63e:	c6 2f       	mov	r28, r22
     640:	81 30       	cpi	r24, 0x01	; 1
     642:	59 f4       	brne	.+22     	; 0x65a <Lcd4_Set_Cursor+0x1e>
     644:	80 e8       	ldi	r24, 0x80	; 128
     646:	86 0f       	add	r24, r22
     648:	82 95       	swap	r24
     64a:	8f 70       	andi	r24, 0x0F	; 15
     64c:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Cmd>
     650:	8c 2f       	mov	r24, r28
     652:	8f 70       	andi	r24, 0x0F	; 15
     654:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Cmd>
     658:	0c c0       	rjmp	.+24     	; 0x672 <Lcd4_Set_Cursor+0x36>
     65a:	82 30       	cpi	r24, 0x02	; 2
     65c:	51 f4       	brne	.+20     	; 0x672 <Lcd4_Set_Cursor+0x36>
     65e:	80 ec       	ldi	r24, 0xC0	; 192
     660:	86 0f       	add	r24, r22
     662:	82 95       	swap	r24
     664:	8f 70       	andi	r24, 0x0F	; 15
     666:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Cmd>
     66a:	8c 2f       	mov	r24, r28
     66c:	8f 70       	andi	r24, 0x0F	; 15
     66e:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Cmd>
     672:	cf 91       	pop	r28
     674:	08 95       	ret

00000676 <Lcd4_Init>:
     676:	80 e0       	ldi	r24, 0x00	; 0
     678:	0e 94 b2 02 	call	0x564	; 0x564 <Lcd4_Port>
     67c:	8f e3       	ldi	r24, 0x3F	; 63
     67e:	9c e9       	ldi	r25, 0x9C	; 156
     680:	01 97       	sbiw	r24, 0x01	; 1
     682:	f1 f7       	brne	.-4      	; 0x680 <Lcd4_Init+0xa>
     684:	00 c0       	rjmp	.+0      	; 0x686 <Lcd4_Init+0x10>
     686:	00 00       	nop
     688:	83 e0       	ldi	r24, 0x03	; 3
     68a:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Cmd>
     68e:	8f e0       	ldi	r24, 0x0F	; 15
     690:	97 e2       	ldi	r25, 0x27	; 39
     692:	01 97       	sbiw	r24, 0x01	; 1
     694:	f1 f7       	brne	.-4      	; 0x692 <Lcd4_Init+0x1c>
     696:	00 c0       	rjmp	.+0      	; 0x698 <Lcd4_Init+0x22>
     698:	00 00       	nop
     69a:	83 e0       	ldi	r24, 0x03	; 3
     69c:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Cmd>
     6a0:	8f ee       	ldi	r24, 0xEF	; 239
     6a2:	95 e5       	ldi	r25, 0x55	; 85
     6a4:	01 97       	sbiw	r24, 0x01	; 1
     6a6:	f1 f7       	brne	.-4      	; 0x6a4 <Lcd4_Init+0x2e>
     6a8:	00 c0       	rjmp	.+0      	; 0x6aa <Lcd4_Init+0x34>
     6aa:	00 00       	nop
     6ac:	83 e0       	ldi	r24, 0x03	; 3
     6ae:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Cmd>
     6b2:	82 e0       	ldi	r24, 0x02	; 2
     6b4:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Cmd>
     6b8:	82 e0       	ldi	r24, 0x02	; 2
     6ba:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Cmd>
     6be:	88 e0       	ldi	r24, 0x08	; 8
     6c0:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Cmd>
     6c4:	80 e0       	ldi	r24, 0x00	; 0
     6c6:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Cmd>
     6ca:	8c e0       	ldi	r24, 0x0C	; 12
     6cc:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Cmd>
     6d0:	80 e0       	ldi	r24, 0x00	; 0
     6d2:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Cmd>
     6d6:	86 e0       	ldi	r24, 0x06	; 6
     6d8:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Lcd4_Cmd>
     6dc:	08 95       	ret

000006de <Lcd4_Write_Char>:
     6de:	cf 93       	push	r28
     6e0:	c8 2f       	mov	r28, r24
     6e2:	61 e0       	ldi	r22, 0x01	; 1
     6e4:	70 e0       	ldi	r23, 0x00	; 0
     6e6:	8a e1       	ldi	r24, 0x1A	; 26
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	0e 94 72 01 	call	0x2e4	; 0x2e4 <pinChange>
     6ee:	8c 2f       	mov	r24, r28
     6f0:	82 95       	swap	r24
     6f2:	8f 70       	andi	r24, 0x0F	; 15
     6f4:	0e 94 b2 02 	call	0x564	; 0x564 <Lcd4_Port>
     6f8:	61 e0       	ldi	r22, 0x01	; 1
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	8b e1       	ldi	r24, 0x1B	; 27
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	0e 94 72 01 	call	0x2e4	; 0x2e4 <pinChange>
     704:	8f ec       	ldi	r24, 0xCF	; 207
     706:	97 e0       	ldi	r25, 0x07	; 7
     708:	01 97       	sbiw	r24, 0x01	; 1
     70a:	f1 f7       	brne	.-4      	; 0x708 <Lcd4_Write_Char+0x2a>
     70c:	00 c0       	rjmp	.+0      	; 0x70e <Lcd4_Write_Char+0x30>
     70e:	00 00       	nop
     710:	60 e0       	ldi	r22, 0x00	; 0
     712:	70 e0       	ldi	r23, 0x00	; 0
     714:	8b e1       	ldi	r24, 0x1B	; 27
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	0e 94 72 01 	call	0x2e4	; 0x2e4 <pinChange>
     71c:	8f ec       	ldi	r24, 0xCF	; 207
     71e:	97 e0       	ldi	r25, 0x07	; 7
     720:	01 97       	sbiw	r24, 0x01	; 1
     722:	f1 f7       	brne	.-4      	; 0x720 <Lcd4_Write_Char+0x42>
     724:	00 c0       	rjmp	.+0      	; 0x726 <Lcd4_Write_Char+0x48>
     726:	00 00       	nop
     728:	8c 2f       	mov	r24, r28
     72a:	8f 70       	andi	r24, 0x0F	; 15
     72c:	0e 94 b2 02 	call	0x564	; 0x564 <Lcd4_Port>
     730:	61 e0       	ldi	r22, 0x01	; 1
     732:	70 e0       	ldi	r23, 0x00	; 0
     734:	8b e1       	ldi	r24, 0x1B	; 27
     736:	90 e0       	ldi	r25, 0x00	; 0
     738:	0e 94 72 01 	call	0x2e4	; 0x2e4 <pinChange>
     73c:	8f ec       	ldi	r24, 0xCF	; 207
     73e:	97 e0       	ldi	r25, 0x07	; 7
     740:	01 97       	sbiw	r24, 0x01	; 1
     742:	f1 f7       	brne	.-4      	; 0x740 <Lcd4_Write_Char+0x62>
     744:	00 c0       	rjmp	.+0      	; 0x746 <Lcd4_Write_Char+0x68>
     746:	00 00       	nop
     748:	60 e0       	ldi	r22, 0x00	; 0
     74a:	70 e0       	ldi	r23, 0x00	; 0
     74c:	8b e1       	ldi	r24, 0x1B	; 27
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	0e 94 72 01 	call	0x2e4	; 0x2e4 <pinChange>
     754:	8f ec       	ldi	r24, 0xCF	; 207
     756:	97 e0       	ldi	r25, 0x07	; 7
     758:	01 97       	sbiw	r24, 0x01	; 1
     75a:	f1 f7       	brne	.-4      	; 0x758 <Lcd4_Write_Char+0x7a>
     75c:	00 c0       	rjmp	.+0      	; 0x75e <Lcd4_Write_Char+0x80>
     75e:	00 00       	nop
     760:	cf 91       	pop	r28
     762:	08 95       	ret

00000764 <Lcd4_Write_String>:
     764:	cf 93       	push	r28
     766:	df 93       	push	r29
     768:	ec 01       	movw	r28, r24
     76a:	88 81       	ld	r24, Y
     76c:	88 23       	and	r24, r24
     76e:	31 f0       	breq	.+12     	; 0x77c <Lcd4_Write_String+0x18>
     770:	21 96       	adiw	r28, 0x01	; 1
     772:	0e 94 6f 03 	call	0x6de	; 0x6de <Lcd4_Write_Char>
     776:	89 91       	ld	r24, Y+
     778:	81 11       	cpse	r24, r1
     77a:	fb cf       	rjmp	.-10     	; 0x772 <Lcd4_Write_String+0xe>
     77c:	df 91       	pop	r29
     77e:	cf 91       	pop	r28
     780:	08 95       	ret

00000782 <keyfind>:
     782:	30 ef       	ldi	r19, 0xF0	; 240
     784:	2f ef       	ldi	r18, 0xFF	; 255
     786:	9f ee       	ldi	r25, 0xEF	; 239
     788:	6f ed       	ldi	r22, 0xDF	; 223
     78a:	5f eb       	ldi	r21, 0xBF	; 191
     78c:	4f e7       	ldi	r20, 0x7F	; 127
     78e:	3a bb       	out	0x1a, r19	; 26
     790:	2b bb       	out	0x1b, r18	; 27
     792:	8b b3       	in	r24, 0x1b	; 27
     794:	8f 70       	andi	r24, 0x0F	; 15
     796:	8b bb       	out	0x1b, r24	; 27
     798:	00 00       	nop
     79a:	89 b3       	in	r24, 0x19	; 25
     79c:	8f 70       	andi	r24, 0x0F	; 15
     79e:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <colloc>
     7a2:	8f 30       	cpi	r24, 0x0F	; 15
     7a4:	b1 f7       	brne	.-20     	; 0x792 <keyfind+0x10>
     7a6:	ef e3       	ldi	r30, 0x3F	; 63
     7a8:	fc e9       	ldi	r31, 0x9C	; 156
     7aa:	31 97       	sbiw	r30, 0x01	; 1
     7ac:	f1 f7       	brne	.-4      	; 0x7aa <keyfind+0x28>
     7ae:	00 c0       	rjmp	.+0      	; 0x7b0 <keyfind+0x2e>
     7b0:	00 00       	nop
     7b2:	89 b3       	in	r24, 0x19	; 25
     7b4:	8f 70       	andi	r24, 0x0F	; 15
     7b6:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <colloc>
     7ba:	8f 30       	cpi	r24, 0x0F	; 15
     7bc:	a1 f3       	breq	.-24     	; 0x7a6 <keyfind+0x24>
     7be:	ff ef       	ldi	r31, 0xFF	; 255
     7c0:	79 ef       	ldi	r23, 0xF9	; 249
     7c2:	80 e0       	ldi	r24, 0x00	; 0
     7c4:	f1 50       	subi	r31, 0x01	; 1
     7c6:	70 40       	sbci	r23, 0x00	; 0
     7c8:	80 40       	sbci	r24, 0x00	; 0
     7ca:	e1 f7       	brne	.-8      	; 0x7c4 <keyfind+0x42>
     7cc:	00 c0       	rjmp	.+0      	; 0x7ce <keyfind+0x4c>
     7ce:	00 00       	nop
     7d0:	89 b3       	in	r24, 0x19	; 25
     7d2:	8f 70       	andi	r24, 0x0F	; 15
     7d4:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <colloc>
     7d8:	8f 30       	cpi	r24, 0x0F	; 15
     7da:	29 f3       	breq	.-54     	; 0x7a6 <keyfind+0x24>
     7dc:	9b bb       	out	0x1b, r25	; 27
     7de:	00 00       	nop
     7e0:	89 b3       	in	r24, 0x19	; 25
     7e2:	8f 70       	andi	r24, 0x0F	; 15
     7e4:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <colloc>
     7e8:	8f 30       	cpi	r24, 0x0F	; 15
     7ea:	19 f0       	breq	.+6      	; 0x7f2 <keyfind+0x70>
     7ec:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <rowloc>
     7f0:	24 c0       	rjmp	.+72     	; 0x83a <keyfind+0xb8>
     7f2:	6b bb       	out	0x1b, r22	; 27
     7f4:	00 00       	nop
     7f6:	89 b3       	in	r24, 0x19	; 25
     7f8:	8f 70       	andi	r24, 0x0F	; 15
     7fa:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <colloc>
     7fe:	8f 30       	cpi	r24, 0x0F	; 15
     800:	21 f0       	breq	.+8      	; 0x80a <keyfind+0x88>
     802:	81 e0       	ldi	r24, 0x01	; 1
     804:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <rowloc>
     808:	18 c0       	rjmp	.+48     	; 0x83a <keyfind+0xb8>
     80a:	5b bb       	out	0x1b, r21	; 27
     80c:	00 00       	nop
     80e:	89 b3       	in	r24, 0x19	; 25
     810:	8f 70       	andi	r24, 0x0F	; 15
     812:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <colloc>
     816:	8f 30       	cpi	r24, 0x0F	; 15
     818:	21 f0       	breq	.+8      	; 0x822 <keyfind+0xa0>
     81a:	82 e0       	ldi	r24, 0x02	; 2
     81c:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <rowloc>
     820:	0c c0       	rjmp	.+24     	; 0x83a <keyfind+0xb8>
     822:	4b bb       	out	0x1b, r20	; 27
     824:	00 00       	nop
     826:	89 b3       	in	r24, 0x19	; 25
     828:	8f 70       	andi	r24, 0x0F	; 15
     82a:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <colloc>
     82e:	8f 30       	cpi	r24, 0x0F	; 15
     830:	09 f4       	brne	.+2      	; 0x834 <keyfind+0xb2>
     832:	ad cf       	rjmp	.-166    	; 0x78e <keyfind+0xc>
     834:	83 e0       	ldi	r24, 0x03	; 3
     836:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <rowloc>
     83a:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <colloc>
     83e:	8e 30       	cpi	r24, 0x0E	; 14
     840:	59 f4       	brne	.+22     	; 0x858 <keyfind+0xd6>
     842:	e0 91 42 01 	lds	r30, 0x0142	; 0x800142 <rowloc>
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	ee 0f       	add	r30, r30
     84a:	ff 1f       	adc	r31, r31
     84c:	ee 0f       	add	r30, r30
     84e:	ff 1f       	adc	r31, r31
     850:	e7 59       	subi	r30, 0x97	; 151
     852:	ff 4f       	sbci	r31, 0xFF	; 255
     854:	80 81       	ld	r24, Z
     856:	08 95       	ret
     858:	8d 30       	cpi	r24, 0x0D	; 13
     85a:	59 f4       	brne	.+22     	; 0x872 <__stack+0x13>
     85c:	e0 91 42 01 	lds	r30, 0x0142	; 0x800142 <rowloc>
     860:	f0 e0       	ldi	r31, 0x00	; 0
     862:	ee 0f       	add	r30, r30
     864:	ff 1f       	adc	r31, r31
     866:	ee 0f       	add	r30, r30
     868:	ff 1f       	adc	r31, r31
     86a:	e7 59       	subi	r30, 0x97	; 151
     86c:	ff 4f       	sbci	r31, 0xFF	; 255
     86e:	81 81       	ldd	r24, Z+1	; 0x01
     870:	08 95       	ret
     872:	8b 30       	cpi	r24, 0x0B	; 11
     874:	59 f4       	brne	.+22     	; 0x88c <__stack+0x2d>
     876:	e0 91 42 01 	lds	r30, 0x0142	; 0x800142 <rowloc>
     87a:	f0 e0       	ldi	r31, 0x00	; 0
     87c:	ee 0f       	add	r30, r30
     87e:	ff 1f       	adc	r31, r31
     880:	ee 0f       	add	r30, r30
     882:	ff 1f       	adc	r31, r31
     884:	e7 59       	subi	r30, 0x97	; 151
     886:	ff 4f       	sbci	r31, 0xFF	; 255
     888:	82 81       	ldd	r24, Z+2	; 0x02
     88a:	08 95       	ret
     88c:	e0 91 42 01 	lds	r30, 0x0142	; 0x800142 <rowloc>
     890:	f0 e0       	ldi	r31, 0x00	; 0
     892:	ee 0f       	add	r30, r30
     894:	ff 1f       	adc	r31, r31
     896:	ee 0f       	add	r30, r30
     898:	ff 1f       	adc	r31, r31
     89a:	e7 59       	subi	r30, 0x97	; 151
     89c:	ff 4f       	sbci	r31, 0xFF	; 255
     89e:	83 81       	ldd	r24, Z+3	; 0x03
     8a0:	08 95       	ret

000008a2 <RTC_Read_Clock>:
     8a2:	cf 93       	push	r28
     8a4:	c8 2f       	mov	r28, r24
     8a6:	80 ed       	ldi	r24, 0xD0	; 208
     8a8:	0e 94 10 01 	call	0x220	; 0x220 <I2C_Start>
     8ac:	8c 2f       	mov	r24, r28
     8ae:	0e 94 50 01 	call	0x2a0	; 0x2a0 <I2C_Write>
     8b2:	81 ed       	ldi	r24, 0xD1	; 209
     8b4:	0e 94 2d 01 	call	0x25a	; 0x25a <I2C_Repeated_Start>
     8b8:	0e 94 62 01 	call	0x2c4	; 0x2c4 <I2C_Read_Ack>
     8bc:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <second+0x1>
     8c0:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <second>
     8c4:	0e 94 62 01 	call	0x2c4	; 0x2c4 <I2C_Read_Ack>
     8c8:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <minute+0x1>
     8cc:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <minute>
     8d0:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <I2C_Read_Nack>
     8d4:	90 93 44 01 	sts	0x0144, r25	; 0x800144 <hour+0x1>
     8d8:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <hour>
     8dc:	0e 94 4a 01 	call	0x294	; 0x294 <I2C_Stop>
     8e0:	cf 91       	pop	r28
     8e2:	08 95       	ret

000008e4 <alarm>:
     8e4:	0e 94 49 00 	call	0x92	; 0x92 <hx711_read>
     8e8:	2a e0       	ldi	r18, 0x0A	; 10
     8ea:	49 e4       	ldi	r20, 0x49	; 73
     8ec:	51 e0       	ldi	r21, 0x01	; 1
     8ee:	0e 94 16 09 	call	0x122c	; 0x122c <__ltoa_ncheck>
     8f2:	0e 94 96 00 	call	0x12c	; 0x12c <hx711_getweight>
     8f6:	c7 98       	cbi	0x18, 7	; 24
     8f8:	2f ef       	ldi	r18, 0xFF	; 255
     8fa:	30 e7       	ldi	r19, 0x70	; 112
     8fc:	42 e0       	ldi	r20, 0x02	; 2
     8fe:	21 50       	subi	r18, 0x01	; 1
     900:	30 40       	sbci	r19, 0x00	; 0
     902:	40 40       	sbci	r20, 0x00	; 0
     904:	e1 f7       	brne	.-8      	; 0x8fe <alarm+0x1a>
     906:	00 c0       	rjmp	.+0      	; 0x908 <alarm+0x24>
     908:	00 00       	nop
     90a:	c7 9a       	sbi	0x18, 7	; 24
     90c:	2f e7       	ldi	r18, 0x7F	; 127
     90e:	38 e3       	ldi	r19, 0x38	; 56
     910:	41 e0       	ldi	r20, 0x01	; 1
     912:	21 50       	subi	r18, 0x01	; 1
     914:	30 40       	sbci	r19, 0x00	; 0
     916:	40 40       	sbci	r20, 0x00	; 0
     918:	e1 f7       	brne	.-8      	; 0x912 <alarm+0x2e>
     91a:	00 c0       	rjmp	.+0      	; 0x91c <alarm+0x38>
     91c:	00 00       	nop
     91e:	c7 98       	cbi	0x18, 7	; 24
     920:	2f ef       	ldi	r18, 0xFF	; 255
     922:	30 e7       	ldi	r19, 0x70	; 112
     924:	42 e0       	ldi	r20, 0x02	; 2
     926:	21 50       	subi	r18, 0x01	; 1
     928:	30 40       	sbci	r19, 0x00	; 0
     92a:	40 40       	sbci	r20, 0x00	; 0
     92c:	e1 f7       	brne	.-8      	; 0x926 <alarm+0x42>
     92e:	00 c0       	rjmp	.+0      	; 0x930 <alarm+0x4c>
     930:	00 00       	nop
     932:	c7 9a       	sbi	0x18, 7	; 24
     934:	2f e7       	ldi	r18, 0x7F	; 127
     936:	38 e3       	ldi	r19, 0x38	; 56
     938:	41 e0       	ldi	r20, 0x01	; 1
     93a:	21 50       	subi	r18, 0x01	; 1
     93c:	30 40       	sbci	r19, 0x00	; 0
     93e:	40 40       	sbci	r20, 0x00	; 0
     940:	e1 f7       	brne	.-8      	; 0x93a <alarm+0x56>
     942:	00 c0       	rjmp	.+0      	; 0x944 <alarm+0x60>
     944:	00 00       	nop
     946:	c7 98       	cbi	0x18, 7	; 24
     948:	2f ef       	ldi	r18, 0xFF	; 255
     94a:	30 e7       	ldi	r19, 0x70	; 112
     94c:	42 e0       	ldi	r20, 0x02	; 2
     94e:	21 50       	subi	r18, 0x01	; 1
     950:	30 40       	sbci	r19, 0x00	; 0
     952:	40 40       	sbci	r20, 0x00	; 0
     954:	e1 f7       	brne	.-8      	; 0x94e <alarm+0x6a>
     956:	00 c0       	rjmp	.+0      	; 0x958 <alarm+0x74>
     958:	00 00       	nop
     95a:	c7 9a       	sbi	0x18, 7	; 24
     95c:	2f e7       	ldi	r18, 0x7F	; 127
     95e:	38 e3       	ldi	r19, 0x38	; 56
     960:	41 e0       	ldi	r20, 0x01	; 1
     962:	21 50       	subi	r18, 0x01	; 1
     964:	30 40       	sbci	r19, 0x00	; 0
     966:	40 40       	sbci	r20, 0x00	; 0
     968:	e1 f7       	brne	.-8      	; 0x962 <alarm+0x7e>
     96a:	00 c0       	rjmp	.+0      	; 0x96c <alarm+0x88>
     96c:	00 00       	nop
     96e:	c7 98       	cbi	0x18, 7	; 24
     970:	2f e7       	ldi	r18, 0x7F	; 127
     972:	38 e3       	ldi	r19, 0x38	; 56
     974:	41 e0       	ldi	r20, 0x01	; 1
     976:	21 50       	subi	r18, 0x01	; 1
     978:	30 40       	sbci	r19, 0x00	; 0
     97a:	40 40       	sbci	r20, 0x00	; 0
     97c:	e1 f7       	brne	.-8      	; 0x976 <alarm+0x92>
     97e:	00 c0       	rjmp	.+0      	; 0x980 <alarm+0x9c>
     980:	00 00       	nop
     982:	c7 9a       	sbi	0x18, 7	; 24
     984:	2f ef       	ldi	r18, 0xFF	; 255
     986:	35 ea       	ldi	r19, 0xA5	; 165
     988:	4e e0       	ldi	r20, 0x0E	; 14
     98a:	21 50       	subi	r18, 0x01	; 1
     98c:	30 40       	sbci	r19, 0x00	; 0
     98e:	40 40       	sbci	r20, 0x00	; 0
     990:	e1 f7       	brne	.-8      	; 0x98a <alarm+0xa6>
     992:	00 c0       	rjmp	.+0      	; 0x994 <alarm+0xb0>
     994:	00 00       	nop
     996:	b4 9b       	sbis	0x16, 4	; 22
     998:	08 c0       	rjmp	.+16     	; 0x9aa <alarm+0xc6>
     99a:	c7 9a       	sbi	0x18, 7	; 24
     99c:	81 e0       	ldi	r24, 0x01	; 1
     99e:	90 e0       	ldi	r25, 0x00	; 0
     9a0:	90 93 3c 01 	sts	0x013C, r25	; 0x80013c <alarmtimeout+0x1>
     9a4:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <alarmtimeout>
     9a8:	08 95       	ret
     9aa:	20 e0       	ldi	r18, 0x00	; 0
     9ac:	30 e0       	ldi	r19, 0x00	; 0
     9ae:	40 e4       	ldi	r20, 0x40	; 64
     9b0:	50 e4       	ldi	r21, 0x40	; 64
     9b2:	0e 94 c4 07 	call	0xf88	; 0xf88 <__cmpsf2>
     9b6:	18 16       	cp	r1, r24
     9b8:	0c f4       	brge	.+2      	; 0x9bc <alarm+0xd8>
     9ba:	94 cf       	rjmp	.-216    	; 0x8e4 <alarm>
     9bc:	c7 9a       	sbi	0x18, 7	; 24
     9be:	81 e0       	ldi	r24, 0x01	; 1
     9c0:	90 e0       	ldi	r25, 0x00	; 0
     9c2:	90 93 3c 01 	sts	0x013C, r25	; 0x80013c <alarmtimeout+0x1>
     9c6:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <alarmtimeout>
     9ca:	08 95       	ret

000009cc <fun3>:
     9cc:	0e 94 17 03 	call	0x62e	; 0x62e <Lcd4_Clear>
     9d0:	60 e0       	ldi	r22, 0x00	; 0
     9d2:	81 e0       	ldi	r24, 0x01	; 1
     9d4:	0e 94 1e 03 	call	0x63c	; 0x63c <Lcd4_Set_Cursor>
     9d8:	89 e7       	ldi	r24, 0x79	; 121
     9da:	90 e0       	ldi	r25, 0x00	; 0
     9dc:	0e 94 b2 03 	call	0x764	; 0x764 <Lcd4_Write_String>
     9e0:	60 e0       	ldi	r22, 0x00	; 0
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	0e 94 1e 03 	call	0x63c	; 0x63c <Lcd4_Set_Cursor>
     9e8:	0e 94 c1 03 	call	0x782	; 0x782 <keyfind>
     9ec:	90 ed       	ldi	r25, 0xD0	; 208
     9ee:	98 0f       	add	r25, r24
     9f0:	9a 30       	cpi	r25, 0x0A	; 10
     9f2:	d0 f7       	brcc	.-12     	; 0x9e8 <fun3+0x1c>
     9f4:	0e 94 6f 03 	call	0x6de	; 0x6de <Lcd4_Write_Char>
     9f8:	2f ef       	ldi	r18, 0xFF	; 255
     9fa:	89 e6       	ldi	r24, 0x69	; 105
     9fc:	98 e1       	ldi	r25, 0x18	; 24
     9fe:	21 50       	subi	r18, 0x01	; 1
     a00:	80 40       	sbci	r24, 0x00	; 0
     a02:	90 40       	sbci	r25, 0x00	; 0
     a04:	e1 f7       	brne	.-8      	; 0x9fe <fun3+0x32>
     a06:	00 c0       	rjmp	.+0      	; 0xa08 <fun3+0x3c>
     a08:	00 00       	nop
     a0a:	08 95       	ret

00000a0c <fun2>:
     a0c:	0f 93       	push	r16
     a0e:	1f 93       	push	r17
     a10:	cf 93       	push	r28
     a12:	df 93       	push	r29
     a14:	cd b7       	in	r28, 0x3d	; 61
     a16:	de b7       	in	r29, 0x3e	; 62
     a18:	60 97       	sbiw	r28, 0x10	; 16
     a1a:	0f b6       	in	r0, 0x3f	; 63
     a1c:	f8 94       	cli
     a1e:	de bf       	out	0x3e, r29	; 62
     a20:	0f be       	out	0x3f, r0	; 63
     a22:	cd bf       	out	0x3d, r28	; 61
     a24:	0e 94 17 03 	call	0x62e	; 0x62e <Lcd4_Clear>
     a28:	60 e0       	ldi	r22, 0x00	; 0
     a2a:	81 e0       	ldi	r24, 0x01	; 1
     a2c:	0e 94 1e 03 	call	0x63c	; 0x63c <Lcd4_Set_Cursor>
     a30:	89 e8       	ldi	r24, 0x89	; 137
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	0e 94 b2 03 	call	0x764	; 0x764 <Lcd4_Write_String>
     a38:	60 e0       	ldi	r22, 0x00	; 0
     a3a:	82 e0       	ldi	r24, 0x02	; 2
     a3c:	0e 94 1e 03 	call	0x63c	; 0x63c <Lcd4_Set_Cursor>
     a40:	00 e0       	ldi	r16, 0x00	; 0
     a42:	10 e0       	ldi	r17, 0x00	; 0
     a44:	0e 94 c1 03 	call	0x782	; 0x782 <keyfind>
     a48:	90 ed       	ldi	r25, 0xD0	; 208
     a4a:	98 0f       	add	r25, r24
     a4c:	9a 30       	cpi	r25, 0x0A	; 10
     a4e:	60 f5       	brcc	.+88     	; 0xaa8 <fun2+0x9c>
     a50:	02 30       	cpi	r16, 0x02	; 2
     a52:	11 05       	cpc	r17, r1
     a54:	a4 f0       	brlt	.+40     	; 0xa7e <fun2+0x72>
     a56:	60 e0       	ldi	r22, 0x00	; 0
     a58:	82 e0       	ldi	r24, 0x02	; 2
     a5a:	0e 94 1e 03 	call	0x63c	; 0x63c <Lcd4_Set_Cursor>
     a5e:	88 e9       	ldi	r24, 0x98	; 152
     a60:	90 e0       	ldi	r25, 0x00	; 0
     a62:	0e 94 b2 03 	call	0x764	; 0x764 <Lcd4_Write_String>
     a66:	2f ef       	ldi	r18, 0xFF	; 255
     a68:	89 e6       	ldi	r24, 0x69	; 105
     a6a:	98 e1       	ldi	r25, 0x18	; 24
     a6c:	21 50       	subi	r18, 0x01	; 1
     a6e:	80 40       	sbci	r24, 0x00	; 0
     a70:	90 40       	sbci	r25, 0x00	; 0
     a72:	e1 f7       	brne	.-8      	; 0xa6c <fun2+0x60>
     a74:	00 c0       	rjmp	.+0      	; 0xa76 <fun2+0x6a>
     a76:	00 00       	nop
     a78:	0e 94 06 05 	call	0xa0c	; 0xa0c <fun2>
     a7c:	26 c0       	rjmp	.+76     	; 0xaca <fun2+0xbe>
     a7e:	e1 e0       	ldi	r30, 0x01	; 1
     a80:	f0 e0       	ldi	r31, 0x00	; 0
     a82:	ec 0f       	add	r30, r28
     a84:	fd 1f       	adc	r31, r29
     a86:	e0 0f       	add	r30, r16
     a88:	f1 1f       	adc	r31, r17
     a8a:	80 83       	st	Z, r24
     a8c:	0f 5f       	subi	r16, 0xFF	; 255
     a8e:	1f 4f       	sbci	r17, 0xFF	; 255
     a90:	0e 94 6f 03 	call	0x6de	; 0x6de <Lcd4_Write_Char>
     a94:	2f ef       	ldi	r18, 0xFF	; 255
     a96:	89 e6       	ldi	r24, 0x69	; 105
     a98:	98 e1       	ldi	r25, 0x18	; 24
     a9a:	21 50       	subi	r18, 0x01	; 1
     a9c:	80 40       	sbci	r24, 0x00	; 0
     a9e:	90 40       	sbci	r25, 0x00	; 0
     aa0:	e1 f7       	brne	.-8      	; 0xa9a <fun2+0x8e>
     aa2:	00 c0       	rjmp	.+0      	; 0xaa4 <fun2+0x98>
     aa4:	00 00       	nop
     aa6:	ce cf       	rjmp	.-100    	; 0xa44 <fun2+0x38>
     aa8:	96 ed       	ldi	r25, 0xD6	; 214
     aaa:	98 0f       	add	r25, r24
     aac:	92 30       	cpi	r25, 0x02	; 2
     aae:	18 f0       	brcs	.+6      	; 0xab6 <fun2+0xaa>
     ab0:	8d 7f       	andi	r24, 0xFD	; 253
     ab2:	8d 32       	cpi	r24, 0x2D	; 45
     ab4:	39 f6       	brne	.-114    	; 0xa44 <fun2+0x38>
     ab6:	ce 01       	movw	r24, r28
     ab8:	01 96       	adiw	r24, 0x01	; 1
     aba:	0e 94 ed 08 	call	0x11da	; 0x11da <atoi>
     abe:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <userminute+0x1>
     ac2:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <userminute>
     ac6:	0e 94 e6 04 	call	0x9cc	; 0x9cc <fun3>
     aca:	60 96       	adiw	r28, 0x10	; 16
     acc:	0f b6       	in	r0, 0x3f	; 63
     ace:	f8 94       	cli
     ad0:	de bf       	out	0x3e, r29	; 62
     ad2:	0f be       	out	0x3f, r0	; 63
     ad4:	cd bf       	out	0x3d, r28	; 61
     ad6:	df 91       	pop	r29
     ad8:	cf 91       	pop	r28
     ada:	1f 91       	pop	r17
     adc:	0f 91       	pop	r16
     ade:	08 95       	ret

00000ae0 <fun1>:
     ae0:	0f 93       	push	r16
     ae2:	1f 93       	push	r17
     ae4:	cf 93       	push	r28
     ae6:	df 93       	push	r29
     ae8:	cd b7       	in	r28, 0x3d	; 61
     aea:	de b7       	in	r29, 0x3e	; 62
     aec:	60 97       	sbiw	r28, 0x10	; 16
     aee:	0f b6       	in	r0, 0x3f	; 63
     af0:	f8 94       	cli
     af2:	de bf       	out	0x3e, r29	; 62
     af4:	0f be       	out	0x3f, r0	; 63
     af6:	cd bf       	out	0x3d, r28	; 61
     af8:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <alarmtimeout+0x1>
     afc:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <alarmtimeout>
     b00:	0e 94 17 03 	call	0x62e	; 0x62e <Lcd4_Clear>
     b04:	60 e0       	ldi	r22, 0x00	; 0
     b06:	81 e0       	ldi	r24, 0x01	; 1
     b08:	0e 94 1e 03 	call	0x63c	; 0x63c <Lcd4_Set_Cursor>
     b0c:	82 ea       	ldi	r24, 0xA2	; 162
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	0e 94 b2 03 	call	0x764	; 0x764 <Lcd4_Write_String>
     b14:	60 e0       	ldi	r22, 0x00	; 0
     b16:	82 e0       	ldi	r24, 0x02	; 2
     b18:	0e 94 1e 03 	call	0x63c	; 0x63c <Lcd4_Set_Cursor>
     b1c:	00 e0       	ldi	r16, 0x00	; 0
     b1e:	10 e0       	ldi	r17, 0x00	; 0
     b20:	0e 94 c1 03 	call	0x782	; 0x782 <keyfind>
     b24:	90 ed       	ldi	r25, 0xD0	; 208
     b26:	98 0f       	add	r25, r24
     b28:	9a 30       	cpi	r25, 0x0A	; 10
     b2a:	60 f5       	brcc	.+88     	; 0xb84 <fun1+0xa4>
     b2c:	02 30       	cpi	r16, 0x02	; 2
     b2e:	11 05       	cpc	r17, r1
     b30:	a4 f0       	brlt	.+40     	; 0xb5a <fun1+0x7a>
     b32:	60 e0       	ldi	r22, 0x00	; 0
     b34:	82 e0       	ldi	r24, 0x02	; 2
     b36:	0e 94 1e 03 	call	0x63c	; 0x63c <Lcd4_Set_Cursor>
     b3a:	88 e9       	ldi	r24, 0x98	; 152
     b3c:	90 e0       	ldi	r25, 0x00	; 0
     b3e:	0e 94 b2 03 	call	0x764	; 0x764 <Lcd4_Write_String>
     b42:	2f ef       	ldi	r18, 0xFF	; 255
     b44:	89 e6       	ldi	r24, 0x69	; 105
     b46:	98 e1       	ldi	r25, 0x18	; 24
     b48:	21 50       	subi	r18, 0x01	; 1
     b4a:	80 40       	sbci	r24, 0x00	; 0
     b4c:	90 40       	sbci	r25, 0x00	; 0
     b4e:	e1 f7       	brne	.-8      	; 0xb48 <fun1+0x68>
     b50:	00 c0       	rjmp	.+0      	; 0xb52 <fun1+0x72>
     b52:	00 00       	nop
     b54:	0e 94 70 05 	call	0xae0	; 0xae0 <fun1>
     b58:	26 c0       	rjmp	.+76     	; 0xba6 <fun1+0xc6>
     b5a:	e1 e0       	ldi	r30, 0x01	; 1
     b5c:	f0 e0       	ldi	r31, 0x00	; 0
     b5e:	ec 0f       	add	r30, r28
     b60:	fd 1f       	adc	r31, r29
     b62:	e0 0f       	add	r30, r16
     b64:	f1 1f       	adc	r31, r17
     b66:	80 83       	st	Z, r24
     b68:	0f 5f       	subi	r16, 0xFF	; 255
     b6a:	1f 4f       	sbci	r17, 0xFF	; 255
     b6c:	0e 94 6f 03 	call	0x6de	; 0x6de <Lcd4_Write_Char>
     b70:	2f ef       	ldi	r18, 0xFF	; 255
     b72:	89 e6       	ldi	r24, 0x69	; 105
     b74:	98 e1       	ldi	r25, 0x18	; 24
     b76:	21 50       	subi	r18, 0x01	; 1
     b78:	80 40       	sbci	r24, 0x00	; 0
     b7a:	90 40       	sbci	r25, 0x00	; 0
     b7c:	e1 f7       	brne	.-8      	; 0xb76 <fun1+0x96>
     b7e:	00 c0       	rjmp	.+0      	; 0xb80 <fun1+0xa0>
     b80:	00 00       	nop
     b82:	ce cf       	rjmp	.-100    	; 0xb20 <fun1+0x40>
     b84:	96 ed       	ldi	r25, 0xD6	; 214
     b86:	98 0f       	add	r25, r24
     b88:	92 30       	cpi	r25, 0x02	; 2
     b8a:	18 f0       	brcs	.+6      	; 0xb92 <fun1+0xb2>
     b8c:	8d 7f       	andi	r24, 0xFD	; 253
     b8e:	8d 32       	cpi	r24, 0x2D	; 45
     b90:	39 f6       	brne	.-114    	; 0xb20 <fun1+0x40>
     b92:	ce 01       	movw	r24, r28
     b94:	01 96       	adiw	r24, 0x01	; 1
     b96:	0e 94 ed 08 	call	0x11da	; 0x11da <atoi>
     b9a:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <userhour+0x1>
     b9e:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <userhour>
     ba2:	0e 94 06 05 	call	0xa0c	; 0xa0c <fun2>
     ba6:	60 96       	adiw	r28, 0x10	; 16
     ba8:	0f b6       	in	r0, 0x3f	; 63
     baa:	f8 94       	cli
     bac:	de bf       	out	0x3e, r29	; 62
     bae:	0f be       	out	0x3f, r0	; 63
     bb0:	cd bf       	out	0x3d, r28	; 61
     bb2:	df 91       	pop	r29
     bb4:	cf 91       	pop	r28
     bb6:	1f 91       	pop	r17
     bb8:	0f 91       	pop	r16
     bba:	08 95       	ret

00000bbc <hexadecimalToDecimal>:
	}

// Function to convert hexadecimal to decimal
int hexadecimalToDecimal(char hexVal[])
{
	int len = strlen(hexVal);
     bbc:	fc 01       	movw	r30, r24
     bbe:	01 90       	ld	r0, Z+
     bc0:	00 20       	and	r0, r0
     bc2:	e9 f7       	brne	.-6      	; 0xbbe <hexadecimalToDecimal+0x2>
     bc4:	31 97       	sbiw	r30, 0x01	; 1
     bc6:	e8 1b       	sub	r30, r24
     bc8:	f9 0b       	sbc	r31, r25
	int base = 1;
	
	int dec_val = 0;
	
	// Extracting characters as digits from last character
	for (int i=len-1; i>=0; i--)
     bca:	9f 01       	movw	r18, r30
     bcc:	21 50       	subi	r18, 0x01	; 1
     bce:	31 09       	sbc	r19, r1
     bd0:	ca f1       	brmi	.+114    	; 0xc44 <hexadecimalToDecimal+0x88>
     bd2:	e8 0f       	add	r30, r24
     bd4:	f9 1f       	adc	r31, r25
     bd6:	dc 01       	movw	r26, r24
     bd8:	60 e0       	ldi	r22, 0x00	; 0
     bda:	70 e0       	ldi	r23, 0x00	; 0
     bdc:	41 e0       	ldi	r20, 0x01	; 1
     bde:	50 e0       	ldi	r21, 0x00	; 0
	{
		// if character lies in '0'-'9', converting
		// it to integral 0-9 by subtracting 48 from
		// ASCII value.
		if (hexVal[i]>='0' && hexVal[i]<='9')
     be0:	22 91       	ld	r18, -Z
     be2:	90 ed       	ldi	r25, 0xD0	; 208
     be4:	92 0f       	add	r25, r18
     be6:	9a 30       	cpi	r25, 0x0A	; 10
     be8:	98 f4       	brcc	.+38     	; 0xc10 <hexadecimalToDecimal+0x54>
		{
			dec_val += (hexVal[i] - 48)*base;
     bea:	30 e0       	ldi	r19, 0x00	; 0
     bec:	20 53       	subi	r18, 0x30	; 48
     bee:	31 09       	sbc	r19, r1
     bf0:	24 9f       	mul	r18, r20
     bf2:	c0 01       	movw	r24, r0
     bf4:	25 9f       	mul	r18, r21
     bf6:	90 0d       	add	r25, r0
     bf8:	34 9f       	mul	r19, r20
     bfa:	90 0d       	add	r25, r0
     bfc:	11 24       	eor	r1, r1
     bfe:	68 0f       	add	r22, r24
     c00:	79 1f       	adc	r23, r25
			
			// incrementing base by power
			base = base * 16;
     c02:	42 95       	swap	r20
     c04:	52 95       	swap	r21
     c06:	50 7f       	andi	r21, 0xF0	; 240
     c08:	54 27       	eor	r21, r20
     c0a:	40 7f       	andi	r20, 0xF0	; 240
     c0c:	54 27       	eor	r21, r20
     c0e:	16 c0       	rjmp	.+44     	; 0xc3c <hexadecimalToDecimal+0x80>
		}
		
		// if character lies in 'A'-'F' , converting
		// it to integral 10 - 15 by subtracting 55
		// from ASCII value
		else if (hexVal[i]>='A' && hexVal[i]<='F')
     c10:	8f eb       	ldi	r24, 0xBF	; 191
     c12:	82 0f       	add	r24, r18
     c14:	86 30       	cpi	r24, 0x06	; 6
     c16:	90 f4       	brcc	.+36     	; 0xc3c <hexadecimalToDecimal+0x80>
		{
			dec_val += (hexVal[i] - 55)*base;
     c18:	30 e0       	ldi	r19, 0x00	; 0
     c1a:	27 53       	subi	r18, 0x37	; 55
     c1c:	31 09       	sbc	r19, r1
     c1e:	24 9f       	mul	r18, r20
     c20:	c0 01       	movw	r24, r0
     c22:	25 9f       	mul	r18, r21
     c24:	90 0d       	add	r25, r0
     c26:	34 9f       	mul	r19, r20
     c28:	90 0d       	add	r25, r0
     c2a:	11 24       	eor	r1, r1
     c2c:	68 0f       	add	r22, r24
     c2e:	79 1f       	adc	r23, r25
			
			// incrementing base by power
			base = base*16;
     c30:	42 95       	swap	r20
     c32:	52 95       	swap	r21
     c34:	50 7f       	andi	r21, 0xF0	; 240
     c36:	54 27       	eor	r21, r20
     c38:	40 7f       	andi	r20, 0xF0	; 240
     c3a:	54 27       	eor	r21, r20
	int base = 1;
	
	int dec_val = 0;
	
	// Extracting characters as digits from last character
	for (int i=len-1; i>=0; i--)
     c3c:	ea 17       	cp	r30, r26
     c3e:	fb 07       	cpc	r31, r27
     c40:	79 f6       	brne	.-98     	; 0xbe0 <hexadecimalToDecimal+0x24>
     c42:	02 c0       	rjmp	.+4      	; 0xc48 <hexadecimalToDecimal+0x8c>
	int len = strlen(hexVal);
	
	// Initializing base value to 1, i.e 16^0
	int base = 1;
	
	int dec_val = 0;
     c44:	60 e0       	ldi	r22, 0x00	; 0
     c46:	70 e0       	ldi	r23, 0x00	; 0
			base = base*16;
		}
	}
	
	return dec_val;
}
     c48:	cb 01       	movw	r24, r22
     c4a:	08 95       	ret

00000c4c <main>:

char numberpressed();

/////////////////////////////// main function /////////////////////////////////////////////////////////

int main(void) {
     c4c:	cf 93       	push	r28
     c4e:	df 93       	push	r29
     c50:	cd b7       	in	r28, 0x3d	; 61
     c52:	de b7       	in	r29, 0x3e	; 62
     c54:	cc 5c       	subi	r28, 0xCC	; 204
     c56:	d1 09       	sbc	r29, r1
     c58:	0f b6       	in	r0, 0x3f	; 63
     c5a:	f8 94       	cli
     c5c:	de bf       	out	0x3e, r29	; 62
     c5e:	0f be       	out	0x3f, r0	; 63
     c60:	cd bf       	out	0x3d, r28	; 61
	char buffer[20];
	char buffer1[20];
	
	DDRD = 0xFF;
     c62:	8f ef       	ldi	r24, 0xFF	; 255
     c64:	81 bb       	out	0x11, r24	; 17
	DDRC = 0xFF;
     c66:	84 bb       	out	0x14, r24	; 20
	DDRB= 0xFF;
     c68:	87 bb       	out	0x17, r24	; 23
	PORTB |= 1<<PB7;
     c6a:	c7 9a       	sbi	0x18, 7	; 24
	
	sei();
     c6c:	78 94       	sei
	
	
	int h = hexadecimalToDecimal(num1);
	int m = hexadecimalToDecimal(num);
	
	sprintf(buffer1, " Alarm  %02d:%02d",userhour,userminute);
     c6e:	0f 2e       	mov	r0, r31
     c70:	fe ef       	ldi	r31, 0xFE	; 254
     c72:	6f 2e       	mov	r6, r31
     c74:	f0 e0       	ldi	r31, 0x00	; 0
     c76:	7f 2e       	mov	r7, r31
     c78:	f0 2d       	mov	r31, r0
     c7a:	4e 01       	movw	r8, r28
     c7c:	25 e1       	ldi	r18, 0x15	; 21
     c7e:	82 0e       	add	r8, r18
     c80:	91 1c       	adc	r9, r1
		
		itoa(hour,num2,10);
		itoa(minute,num3,10);
		
		/*sprintf(buffer, "%02x:%02x:%02x  ", (hour & 0b00011111), minute,second);*/
		sprintf(buffer, "%02x:%02x", (hour & 0b00011111), minute);
     c82:	ce 01       	movw	r24, r28
     c84:	01 96       	adiw	r24, 0x01	; 1
     c86:	6c 01       	movw	r12, r24
     c88:	28 2e       	mov	r2, r24
     c8a:	3d 2c       	mov	r3, r13
		Lcd4_Clear();
		Lcd4_Set_Cursor(1,0);
		Lcd4_Write_String(buffer);
		Lcd4_Set_Cursor(2,0);
		Lcd4_Write_String(buffer1);
     c8c:	48 2c       	mov	r4, r8
     c8e:	59 2c       	mov	r5, r9
	DDRB= 0xFF;
	PORTB |= 1<<PB7;
	
	sei();
	while(1){
	Lcd4_Init();
     c90:	0e 94 3b 03 	call	0x676	; 0x676 <Lcd4_Init>
	I2C_Init();	
     c94:	0e 94 0c 01 	call	0x218	; 0x218 <I2C_Init>
	Lcd4_Clear();
     c98:	0e 94 17 03 	call	0x62e	; 0x62e <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
     c9c:	60 e0       	ldi	r22, 0x00	; 0
     c9e:	81 e0       	ldi	r24, 0x01	; 1
     ca0:	0e 94 1e 03 	call	0x63c	; 0x63c <Lcd4_Set_Cursor>
	Lcd4_Write_String("    WELCOME ");
     ca4:	87 ec       	ldi	r24, 0xC7	; 199
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	0e 94 b2 03 	call	0x764	; 0x764 <Lcd4_Write_String>
	Lcd4_Set_Cursor(2,0);
     cac:	60 e0       	ldi	r22, 0x00	; 0
     cae:	82 e0       	ldi	r24, 0x02	; 2
     cb0:	0e 94 1e 03 	call	0x63c	; 0x63c <Lcd4_Set_Cursor>
	Lcd4_Write_String(" <<<<<<<>>>>>>>");
     cb4:	84 ed       	ldi	r24, 0xD4	; 212
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	0e 94 b2 03 	call	0x764	; 0x764 <Lcd4_Write_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     cbc:	9f ef       	ldi	r25, 0xFF	; 255
     cbe:	2d e3       	ldi	r18, 0x3D	; 61
     cc0:	39 e4       	ldi	r19, 0x49	; 73
     cc2:	91 50       	subi	r25, 0x01	; 1
     cc4:	20 40       	sbci	r18, 0x00	; 0
     cc6:	30 40       	sbci	r19, 0x00	; 0
     cc8:	e1 f7       	brne	.-8      	; 0xcc2 <main+0x76>
     cca:	00 c0       	rjmp	.+0      	; 0xccc <main+0x80>
     ccc:	00 00       	nop
	_delay_ms(3000);
	Lcd4_Clear();
     cce:	0e 94 17 03 	call	0x62e	; 0x62e <Lcd4_Clear>
	Lcd4_Set_Cursor(1,0);
     cd2:	60 e0       	ldi	r22, 0x00	; 0
     cd4:	81 e0       	ldi	r24, 0x01	; 1
     cd6:	0e 94 1e 03 	call	0x63c	; 0x63c <Lcd4_Set_Cursor>
	Lcd4_Write_String("     HAVE A ");
     cda:	84 ee       	ldi	r24, 0xE4	; 228
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	0e 94 b2 03 	call	0x764	; 0x764 <Lcd4_Write_String>
	Lcd4_Set_Cursor(2,0);
     ce2:	60 e0       	ldi	r22, 0x00	; 0
     ce4:	82 e0       	ldi	r24, 0x02	; 2
     ce6:	0e 94 1e 03 	call	0x63c	; 0x63c <Lcd4_Set_Cursor>
	Lcd4_Write_String("    NICE DAY");
     cea:	81 ef       	ldi	r24, 0xF1	; 241
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	0e 94 b2 03 	call	0x764	; 0x764 <Lcd4_Write_String>
     cf2:	8f ef       	ldi	r24, 0xFF	; 255
     cf4:	97 ea       	ldi	r25, 0xA7	; 167
     cf6:	21 e6       	ldi	r18, 0x61	; 97
     cf8:	81 50       	subi	r24, 0x01	; 1
     cfa:	90 40       	sbci	r25, 0x00	; 0
     cfc:	20 40       	sbci	r18, 0x00	; 0
     cfe:	e1 f7       	brne	.-8      	; 0xcf8 <main+0xac>
     d00:	00 c0       	rjmp	.+0      	; 0xd02 <main+0xb6>
     d02:	00 00       	nop
  char num[16];
  char num1[16];
  char num2[16];
  char num3[16];
  
	Lcd4_Clear();
     d04:	0e 94 17 03 	call	0x62e	; 0x62e <Lcd4_Clear>
	
	/*display();*/
	fun1();
     d08:	0e 94 70 05 	call	0xae0	; 0xae0 <fun1>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     d0c:	4a e0       	ldi	r20, 0x0A	; 10
     d0e:	be 01       	movw	r22, r28
     d10:	63 55       	subi	r22, 0x53	; 83
     d12:	7f 4f       	sbci	r23, 0xFF	; 255
     d14:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <userhour>
     d18:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <userhour+0x1>
     d1c:	0e 94 0b 09 	call	0x1216	; 0x1216 <__itoa_ncheck>
     d20:	4a e0       	ldi	r20, 0x0A	; 10
     d22:	be 01       	movw	r22, r28
     d24:	63 54       	subi	r22, 0x43	; 67
     d26:	7f 4f       	sbci	r23, 0xFF	; 255
     d28:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <userminute>
     d2c:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <userminute+0x1>
     d30:	0e 94 0b 09 	call	0x1216	; 0x1216 <__itoa_ncheck>

	itoa(userhour,num1,10);
	itoa(userminute,num,10);
	
	
	int h = hexadecimalToDecimal(num1);
     d34:	ce 01       	movw	r24, r28
     d36:	83 55       	subi	r24, 0x53	; 83
     d38:	9f 4f       	sbci	r25, 0xFF	; 255
     d3a:	0e 94 de 05 	call	0xbbc	; 0xbbc <hexadecimalToDecimal>
     d3e:	7c 01       	movw	r14, r24
	int m = hexadecimalToDecimal(num);
     d40:	ce 01       	movw	r24, r28
     d42:	83 54       	subi	r24, 0x43	; 67
     d44:	9f 4f       	sbci	r25, 0xFF	; 255
     d46:	0e 94 de 05 	call	0xbbc	; 0xbbc <hexadecimalToDecimal>
     d4a:	5c 01       	movw	r10, r24
	
	sprintf(buffer1, " Alarm  %02d:%02d",userhour,userminute);
     d4c:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <userminute+0x1>
     d50:	8f 93       	push	r24
     d52:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <userminute>
     d56:	8f 93       	push	r24
     d58:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <userhour+0x1>
     d5c:	8f 93       	push	r24
     d5e:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <userhour>
     d62:	8f 93       	push	r24
     d64:	7f 92       	push	r7
     d66:	6f 92       	push	r6
     d68:	9f 92       	push	r9
     d6a:	8f 92       	push	r8
     d6c:	0e 94 69 09 	call	0x12d2	; 0x12d2 <sprintf>
	Lcd4_Clear();
     d70:	0e 94 17 03 	call	0x62e	; 0x62e <Lcd4_Clear>
	char printbuff[100];

	hx711_init(gain, scale, offset); //initiate hx711
     d74:	00 91 64 00 	lds	r16, 0x0064	; 0x800064 <offset>
     d78:	10 91 65 00 	lds	r17, 0x0065	; 0x800065 <offset+0x1>
     d7c:	20 91 66 00 	lds	r18, 0x0066	; 0x800066 <offset+0x2>
     d80:	30 91 67 00 	lds	r19, 0x0067	; 0x800067 <offset+0x3>
     d84:	40 91 60 00 	lds	r20, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     d88:	50 91 61 00 	lds	r21, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     d8c:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
     d90:	70 91 63 00 	lds	r23, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
     d94:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <gain>
     d98:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <hx711_init>
     d9c:	0f b6       	in	r0, 0x3f	; 63
     d9e:	f8 94       	cli
     da0:	de bf       	out	0x3e, r29	; 62
     da2:	0f be       	out	0x3f, r0	; 63
     da4:	cd bf       	out	0x3d, r28	; 61
		
		itoa(hour,num2,10);
		itoa(minute,num3,10);
		
		/*sprintf(buffer, "%02x:%02x:%02x  ", (hour & 0b00011111), minute,second);*/
		sprintf(buffer, "%02x:%02x", (hour & 0b00011111), minute);
     da6:	0e ea       	ldi	r16, 0xAE	; 174
     da8:	10 e0       	ldi	r17, 0x00	; 0

#if HX711_MODECURRENT == HX711_MODERUNNING

	for(;;) {
		
		RTC_Read_Clock(0); //get read
     daa:	80 e0       	ldi	r24, 0x00	; 0
     dac:	0e 94 51 04 	call	0x8a2	; 0x8a2 <RTC_Read_Clock>
		
		uint32_t read = hx711_read();
     db0:	0e 94 49 00 	call	0x92	; 0x92 <hx711_read>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__ltoa_ncheck (long, char *, unsigned char);
	return __ltoa_ncheck (__val, __s, __radix);
     db4:	2a e0       	ldi	r18, 0x0A	; 10
     db6:	ae 01       	movw	r20, r28
     db8:	47 5d       	subi	r20, 0xD7	; 215
     dba:	5f 4f       	sbci	r21, 0xFF	; 255
     dbc:	0e 94 16 09 	call	0x122c	; 0x122c <__ltoa_ncheck>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     dc0:	4a e0       	ldi	r20, 0x0A	; 10
     dc2:	be 01       	movw	r22, r28
     dc4:	63 56       	subi	r22, 0x63	; 99
     dc6:	7f 4f       	sbci	r23, 0xFF	; 255
     dc8:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <hour>
     dcc:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <hour+0x1>
     dd0:	0e 94 0b 09 	call	0x1216	; 0x1216 <__itoa_ncheck>
     dd4:	4a e0       	ldi	r20, 0x0A	; 10
     dd6:	be 01       	movw	r22, r28
     dd8:	63 57       	subi	r22, 0x73	; 115
     dda:	7f 4f       	sbci	r23, 0xFF	; 255
     ddc:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <minute>
     de0:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <minute+0x1>
     de4:	0e 94 0b 09 	call	0x1216	; 0x1216 <__itoa_ncheck>
		
		itoa(hour,num2,10);
		itoa(minute,num3,10);
		
		/*sprintf(buffer, "%02x:%02x:%02x  ", (hour & 0b00011111), minute,second);*/
		sprintf(buffer, "%02x:%02x", (hour & 0b00011111), minute);
     de8:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <minute+0x1>
     dec:	8f 93       	push	r24
     dee:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <minute>
     df2:	8f 93       	push	r24
     df4:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <hour>
     df8:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <hour+0x1>
     dfc:	8f 71       	andi	r24, 0x1F	; 31
     dfe:	99 27       	eor	r25, r25
     e00:	9f 93       	push	r25
     e02:	8f 93       	push	r24
     e04:	1f 93       	push	r17
     e06:	0f 93       	push	r16
     e08:	df 92       	push	r13
     e0a:	cf 92       	push	r12
     e0c:	0e 94 69 09 	call	0x12d2	; 0x12d2 <sprintf>
		Lcd4_Clear();
     e10:	0e 94 17 03 	call	0x62e	; 0x62e <Lcd4_Clear>
		Lcd4_Set_Cursor(1,0);
     e14:	60 e0       	ldi	r22, 0x00	; 0
     e16:	81 e0       	ldi	r24, 0x01	; 1
     e18:	0e 94 1e 03 	call	0x63c	; 0x63c <Lcd4_Set_Cursor>
		Lcd4_Write_String(buffer);
     e1c:	82 2d       	mov	r24, r2
     e1e:	93 2d       	mov	r25, r3
     e20:	0e 94 b2 03 	call	0x764	; 0x764 <Lcd4_Write_String>
		Lcd4_Set_Cursor(2,0);
     e24:	60 e0       	ldi	r22, 0x00	; 0
     e26:	82 e0       	ldi	r24, 0x02	; 2
     e28:	0e 94 1e 03 	call	0x63c	; 0x63c <Lcd4_Set_Cursor>
		Lcd4_Write_String(buffer1);
     e2c:	84 2d       	mov	r24, r4
     e2e:	95 2d       	mov	r25, r5
     e30:	0e 94 b2 03 	call	0x764	; 0x764 <Lcd4_Write_String>
		
		//get weight
		double weight = hx711_getweight();
     e34:	0e 94 96 00 	call	0x12c	; 0x12c <hx711_getweight>
		
		////////////////////////////// SET Alarm ////////////////////////////////////
		DDRB &= ~(1<<PINB4);
     e38:	bc 98       	cbi	0x17, 4	; 23
		if((h == (hour & 0b00011111)) && (m == minute) && alarmtimeout == 0){
     e3a:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <hour>
     e3e:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <hour+0x1>
     e42:	8f 71       	andi	r24, 0x1F	; 31
     e44:	99 27       	eor	r25, r25
     e46:	0f b6       	in	r0, 0x3f	; 63
     e48:	f8 94       	cli
     e4a:	de bf       	out	0x3e, r29	; 62
     e4c:	0f be       	out	0x3f, r0	; 63
     e4e:	cd bf       	out	0x3d, r28	; 61
     e50:	e8 16       	cp	r14, r24
     e52:	f9 06       	cpc	r15, r25
     e54:	11 f5       	brne	.+68     	; 0xe9a <main+0x24e>
     e56:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <minute>
     e5a:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <minute+0x1>
     e5e:	a8 16       	cp	r10, r24
     e60:	b9 06       	cpc	r11, r25
     e62:	d9 f4       	brne	.+54     	; 0xe9a <main+0x24e>
     e64:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <alarmtimeout>
     e68:	90 91 3c 01 	lds	r25, 0x013C	; 0x80013c <alarmtimeout+0x1>
     e6c:	89 2b       	or	r24, r25
     e6e:	a9 f4       	brne	.+42     	; 0xe9a <main+0x24e>


			
				Lcd4_Clear();
     e70:	0e 94 17 03 	call	0x62e	; 0x62e <Lcd4_Clear>
				Lcd4_Set_Cursor(1,0);
     e74:	60 e0       	ldi	r22, 0x00	; 0
     e76:	81 e0       	ldi	r24, 0x01	; 1
     e78:	0e 94 1e 03 	call	0x63c	; 0x63c <Lcd4_Set_Cursor>
				Lcd4_Write_String(" << ALARM ON >>");
     e7c:	80 e1       	ldi	r24, 0x10	; 16
     e7e:	91 e0       	ldi	r25, 0x01	; 1
     e80:	0e 94 b2 03 	call	0x764	; 0x764 <Lcd4_Write_String>
				Lcd4_Set_Cursor(2,0);
     e84:	60 e0       	ldi	r22, 0x00	; 0
     e86:	82 e0       	ldi	r24, 0x02	; 2
     e88:	0e 94 1e 03 	call	0x63c	; 0x63c <Lcd4_Set_Cursor>
				Lcd4_Write_String("TIME TO WAKE UP!");
     e8c:	80 e2       	ldi	r24, 0x20	; 32
     e8e:	91 e0       	ldi	r25, 0x01	; 1
     e90:	0e 94 b2 03 	call	0x764	; 0x764 <Lcd4_Write_String>
				alarm();
     e94:	0e 94 72 04 	call	0x8e4	; 0x8e4 <alarm>
		}
		
		_delay_ms(500);
	}
		
}
     e98:	fb ce       	rjmp	.-522    	; 0xc90 <main+0x44>
     e9a:	3f ef       	ldi	r19, 0xFF	; 255
     e9c:	84 e3       	ldi	r24, 0x34	; 52
     e9e:	9c e0       	ldi	r25, 0x0C	; 12
     ea0:	31 50       	subi	r19, 0x01	; 1
     ea2:	80 40       	sbci	r24, 0x00	; 0
     ea4:	90 40       	sbci	r25, 0x00	; 0
     ea6:	e1 f7       	brne	.-8      	; 0xea0 <main+0x254>
     ea8:	00 c0       	rjmp	.+0      	; 0xeaa <main+0x25e>
     eaa:	00 00       	nop
     eac:	7e cf       	rjmp	.-260    	; 0xdaa <main+0x15e>

00000eae <__subsf3>:
     eae:	50 58       	subi	r21, 0x80	; 128

00000eb0 <__addsf3>:
     eb0:	bb 27       	eor	r27, r27
     eb2:	aa 27       	eor	r26, r26
     eb4:	0e 94 6f 07 	call	0xede	; 0xede <__addsf3x>
     eb8:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__fp_round>
     ebc:	0e 94 a5 08 	call	0x114a	; 0x114a <__fp_pscA>
     ec0:	38 f0       	brcs	.+14     	; 0xed0 <__addsf3+0x20>
     ec2:	0e 94 ac 08 	call	0x1158	; 0x1158 <__fp_pscB>
     ec6:	20 f0       	brcs	.+8      	; 0xed0 <__addsf3+0x20>
     ec8:	39 f4       	brne	.+14     	; 0xed8 <__addsf3+0x28>
     eca:	9f 3f       	cpi	r25, 0xFF	; 255
     ecc:	19 f4       	brne	.+6      	; 0xed4 <__addsf3+0x24>
     ece:	26 f4       	brtc	.+8      	; 0xed8 <__addsf3+0x28>
     ed0:	0c 94 a2 08 	jmp	0x1144	; 0x1144 <__fp_nan>
     ed4:	0e f4       	brtc	.+2      	; 0xed8 <__addsf3+0x28>
     ed6:	e0 95       	com	r30
     ed8:	e7 fb       	bst	r30, 7
     eda:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__fp_inf>

00000ede <__addsf3x>:
     ede:	e9 2f       	mov	r30, r25
     ee0:	0e 94 c4 08 	call	0x1188	; 0x1188 <__fp_split3>
     ee4:	58 f3       	brcs	.-42     	; 0xebc <__addsf3+0xc>
     ee6:	ba 17       	cp	r27, r26
     ee8:	62 07       	cpc	r22, r18
     eea:	73 07       	cpc	r23, r19
     eec:	84 07       	cpc	r24, r20
     eee:	95 07       	cpc	r25, r21
     ef0:	20 f0       	brcs	.+8      	; 0xefa <__addsf3x+0x1c>
     ef2:	79 f4       	brne	.+30     	; 0xf12 <__addsf3x+0x34>
     ef4:	a6 f5       	brtc	.+104    	; 0xf5e <__addsf3x+0x80>
     ef6:	0c 94 e6 08 	jmp	0x11cc	; 0x11cc <__fp_zero>
     efa:	0e f4       	brtc	.+2      	; 0xefe <__addsf3x+0x20>
     efc:	e0 95       	com	r30
     efe:	0b 2e       	mov	r0, r27
     f00:	ba 2f       	mov	r27, r26
     f02:	a0 2d       	mov	r26, r0
     f04:	0b 01       	movw	r0, r22
     f06:	b9 01       	movw	r22, r18
     f08:	90 01       	movw	r18, r0
     f0a:	0c 01       	movw	r0, r24
     f0c:	ca 01       	movw	r24, r20
     f0e:	a0 01       	movw	r20, r0
     f10:	11 24       	eor	r1, r1
     f12:	ff 27       	eor	r31, r31
     f14:	59 1b       	sub	r21, r25
     f16:	99 f0       	breq	.+38     	; 0xf3e <__addsf3x+0x60>
     f18:	59 3f       	cpi	r21, 0xF9	; 249
     f1a:	50 f4       	brcc	.+20     	; 0xf30 <__addsf3x+0x52>
     f1c:	50 3e       	cpi	r21, 0xE0	; 224
     f1e:	68 f1       	brcs	.+90     	; 0xf7a <__addsf3x+0x9c>
     f20:	1a 16       	cp	r1, r26
     f22:	f0 40       	sbci	r31, 0x00	; 0
     f24:	a2 2f       	mov	r26, r18
     f26:	23 2f       	mov	r18, r19
     f28:	34 2f       	mov	r19, r20
     f2a:	44 27       	eor	r20, r20
     f2c:	58 5f       	subi	r21, 0xF8	; 248
     f2e:	f3 cf       	rjmp	.-26     	; 0xf16 <__addsf3x+0x38>
     f30:	46 95       	lsr	r20
     f32:	37 95       	ror	r19
     f34:	27 95       	ror	r18
     f36:	a7 95       	ror	r26
     f38:	f0 40       	sbci	r31, 0x00	; 0
     f3a:	53 95       	inc	r21
     f3c:	c9 f7       	brne	.-14     	; 0xf30 <__addsf3x+0x52>
     f3e:	7e f4       	brtc	.+30     	; 0xf5e <__addsf3x+0x80>
     f40:	1f 16       	cp	r1, r31
     f42:	ba 0b       	sbc	r27, r26
     f44:	62 0b       	sbc	r22, r18
     f46:	73 0b       	sbc	r23, r19
     f48:	84 0b       	sbc	r24, r20
     f4a:	ba f0       	brmi	.+46     	; 0xf7a <__addsf3x+0x9c>
     f4c:	91 50       	subi	r25, 0x01	; 1
     f4e:	a1 f0       	breq	.+40     	; 0xf78 <__addsf3x+0x9a>
     f50:	ff 0f       	add	r31, r31
     f52:	bb 1f       	adc	r27, r27
     f54:	66 1f       	adc	r22, r22
     f56:	77 1f       	adc	r23, r23
     f58:	88 1f       	adc	r24, r24
     f5a:	c2 f7       	brpl	.-16     	; 0xf4c <__addsf3x+0x6e>
     f5c:	0e c0       	rjmp	.+28     	; 0xf7a <__addsf3x+0x9c>
     f5e:	ba 0f       	add	r27, r26
     f60:	62 1f       	adc	r22, r18
     f62:	73 1f       	adc	r23, r19
     f64:	84 1f       	adc	r24, r20
     f66:	48 f4       	brcc	.+18     	; 0xf7a <__addsf3x+0x9c>
     f68:	87 95       	ror	r24
     f6a:	77 95       	ror	r23
     f6c:	67 95       	ror	r22
     f6e:	b7 95       	ror	r27
     f70:	f7 95       	ror	r31
     f72:	9e 3f       	cpi	r25, 0xFE	; 254
     f74:	08 f0       	brcs	.+2      	; 0xf78 <__addsf3x+0x9a>
     f76:	b0 cf       	rjmp	.-160    	; 0xed8 <__addsf3+0x28>
     f78:	93 95       	inc	r25
     f7a:	88 0f       	add	r24, r24
     f7c:	08 f0       	brcs	.+2      	; 0xf80 <__addsf3x+0xa2>
     f7e:	99 27       	eor	r25, r25
     f80:	ee 0f       	add	r30, r30
     f82:	97 95       	ror	r25
     f84:	87 95       	ror	r24
     f86:	08 95       	ret

00000f88 <__cmpsf2>:
     f88:	0e 94 78 08 	call	0x10f0	; 0x10f0 <__fp_cmp>
     f8c:	08 f4       	brcc	.+2      	; 0xf90 <__cmpsf2+0x8>
     f8e:	81 e0       	ldi	r24, 0x01	; 1
     f90:	08 95       	ret

00000f92 <__divsf3>:
     f92:	0e 94 dd 07 	call	0xfba	; 0xfba <__divsf3x>
     f96:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__fp_round>
     f9a:	0e 94 ac 08 	call	0x1158	; 0x1158 <__fp_pscB>
     f9e:	58 f0       	brcs	.+22     	; 0xfb6 <__divsf3+0x24>
     fa0:	0e 94 a5 08 	call	0x114a	; 0x114a <__fp_pscA>
     fa4:	40 f0       	brcs	.+16     	; 0xfb6 <__divsf3+0x24>
     fa6:	29 f4       	brne	.+10     	; 0xfb2 <__divsf3+0x20>
     fa8:	5f 3f       	cpi	r21, 0xFF	; 255
     faa:	29 f0       	breq	.+10     	; 0xfb6 <__divsf3+0x24>
     fac:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__fp_inf>
     fb0:	51 11       	cpse	r21, r1
     fb2:	0c 94 e7 08 	jmp	0x11ce	; 0x11ce <__fp_szero>
     fb6:	0c 94 a2 08 	jmp	0x1144	; 0x1144 <__fp_nan>

00000fba <__divsf3x>:
     fba:	0e 94 c4 08 	call	0x1188	; 0x1188 <__fp_split3>
     fbe:	68 f3       	brcs	.-38     	; 0xf9a <__divsf3+0x8>

00000fc0 <__divsf3_pse>:
     fc0:	99 23       	and	r25, r25
     fc2:	b1 f3       	breq	.-20     	; 0xfb0 <__divsf3+0x1e>
     fc4:	55 23       	and	r21, r21
     fc6:	91 f3       	breq	.-28     	; 0xfac <__divsf3+0x1a>
     fc8:	95 1b       	sub	r25, r21
     fca:	55 0b       	sbc	r21, r21
     fcc:	bb 27       	eor	r27, r27
     fce:	aa 27       	eor	r26, r26
     fd0:	62 17       	cp	r22, r18
     fd2:	73 07       	cpc	r23, r19
     fd4:	84 07       	cpc	r24, r20
     fd6:	38 f0       	brcs	.+14     	; 0xfe6 <__divsf3_pse+0x26>
     fd8:	9f 5f       	subi	r25, 0xFF	; 255
     fda:	5f 4f       	sbci	r21, 0xFF	; 255
     fdc:	22 0f       	add	r18, r18
     fde:	33 1f       	adc	r19, r19
     fe0:	44 1f       	adc	r20, r20
     fe2:	aa 1f       	adc	r26, r26
     fe4:	a9 f3       	breq	.-22     	; 0xfd0 <__divsf3_pse+0x10>
     fe6:	35 d0       	rcall	.+106    	; 0x1052 <__divsf3_pse+0x92>
     fe8:	0e 2e       	mov	r0, r30
     fea:	3a f0       	brmi	.+14     	; 0xffa <__divsf3_pse+0x3a>
     fec:	e0 e8       	ldi	r30, 0x80	; 128
     fee:	32 d0       	rcall	.+100    	; 0x1054 <__divsf3_pse+0x94>
     ff0:	91 50       	subi	r25, 0x01	; 1
     ff2:	50 40       	sbci	r21, 0x00	; 0
     ff4:	e6 95       	lsr	r30
     ff6:	00 1c       	adc	r0, r0
     ff8:	ca f7       	brpl	.-14     	; 0xfec <__divsf3_pse+0x2c>
     ffa:	2b d0       	rcall	.+86     	; 0x1052 <__divsf3_pse+0x92>
     ffc:	fe 2f       	mov	r31, r30
     ffe:	29 d0       	rcall	.+82     	; 0x1052 <__divsf3_pse+0x92>
    1000:	66 0f       	add	r22, r22
    1002:	77 1f       	adc	r23, r23
    1004:	88 1f       	adc	r24, r24
    1006:	bb 1f       	adc	r27, r27
    1008:	26 17       	cp	r18, r22
    100a:	37 07       	cpc	r19, r23
    100c:	48 07       	cpc	r20, r24
    100e:	ab 07       	cpc	r26, r27
    1010:	b0 e8       	ldi	r27, 0x80	; 128
    1012:	09 f0       	breq	.+2      	; 0x1016 <__divsf3_pse+0x56>
    1014:	bb 0b       	sbc	r27, r27
    1016:	80 2d       	mov	r24, r0
    1018:	bf 01       	movw	r22, r30
    101a:	ff 27       	eor	r31, r31
    101c:	93 58       	subi	r25, 0x83	; 131
    101e:	5f 4f       	sbci	r21, 0xFF	; 255
    1020:	3a f0       	brmi	.+14     	; 0x1030 <__divsf3_pse+0x70>
    1022:	9e 3f       	cpi	r25, 0xFE	; 254
    1024:	51 05       	cpc	r21, r1
    1026:	78 f0       	brcs	.+30     	; 0x1046 <__divsf3_pse+0x86>
    1028:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__fp_inf>
    102c:	0c 94 e7 08 	jmp	0x11ce	; 0x11ce <__fp_szero>
    1030:	5f 3f       	cpi	r21, 0xFF	; 255
    1032:	e4 f3       	brlt	.-8      	; 0x102c <__divsf3_pse+0x6c>
    1034:	98 3e       	cpi	r25, 0xE8	; 232
    1036:	d4 f3       	brlt	.-12     	; 0x102c <__divsf3_pse+0x6c>
    1038:	86 95       	lsr	r24
    103a:	77 95       	ror	r23
    103c:	67 95       	ror	r22
    103e:	b7 95       	ror	r27
    1040:	f7 95       	ror	r31
    1042:	9f 5f       	subi	r25, 0xFF	; 255
    1044:	c9 f7       	brne	.-14     	; 0x1038 <__divsf3_pse+0x78>
    1046:	88 0f       	add	r24, r24
    1048:	91 1d       	adc	r25, r1
    104a:	96 95       	lsr	r25
    104c:	87 95       	ror	r24
    104e:	97 f9       	bld	r25, 7
    1050:	08 95       	ret
    1052:	e1 e0       	ldi	r30, 0x01	; 1
    1054:	66 0f       	add	r22, r22
    1056:	77 1f       	adc	r23, r23
    1058:	88 1f       	adc	r24, r24
    105a:	bb 1f       	adc	r27, r27
    105c:	62 17       	cp	r22, r18
    105e:	73 07       	cpc	r23, r19
    1060:	84 07       	cpc	r24, r20
    1062:	ba 07       	cpc	r27, r26
    1064:	20 f0       	brcs	.+8      	; 0x106e <__divsf3_pse+0xae>
    1066:	62 1b       	sub	r22, r18
    1068:	73 0b       	sbc	r23, r19
    106a:	84 0b       	sbc	r24, r20
    106c:	ba 0b       	sbc	r27, r26
    106e:	ee 1f       	adc	r30, r30
    1070:	88 f7       	brcc	.-30     	; 0x1054 <__divsf3_pse+0x94>
    1072:	e0 95       	com	r30
    1074:	08 95       	ret

00001076 <__floatunsisf>:
    1076:	e8 94       	clt
    1078:	09 c0       	rjmp	.+18     	; 0x108c <__floatsisf+0x12>

0000107a <__floatsisf>:
    107a:	97 fb       	bst	r25, 7
    107c:	3e f4       	brtc	.+14     	; 0x108c <__floatsisf+0x12>
    107e:	90 95       	com	r25
    1080:	80 95       	com	r24
    1082:	70 95       	com	r23
    1084:	61 95       	neg	r22
    1086:	7f 4f       	sbci	r23, 0xFF	; 255
    1088:	8f 4f       	sbci	r24, 0xFF	; 255
    108a:	9f 4f       	sbci	r25, 0xFF	; 255
    108c:	99 23       	and	r25, r25
    108e:	a9 f0       	breq	.+42     	; 0x10ba <__floatsisf+0x40>
    1090:	f9 2f       	mov	r31, r25
    1092:	96 e9       	ldi	r25, 0x96	; 150
    1094:	bb 27       	eor	r27, r27
    1096:	93 95       	inc	r25
    1098:	f6 95       	lsr	r31
    109a:	87 95       	ror	r24
    109c:	77 95       	ror	r23
    109e:	67 95       	ror	r22
    10a0:	b7 95       	ror	r27
    10a2:	f1 11       	cpse	r31, r1
    10a4:	f8 cf       	rjmp	.-16     	; 0x1096 <__floatsisf+0x1c>
    10a6:	fa f4       	brpl	.+62     	; 0x10e6 <__floatsisf+0x6c>
    10a8:	bb 0f       	add	r27, r27
    10aa:	11 f4       	brne	.+4      	; 0x10b0 <__floatsisf+0x36>
    10ac:	60 ff       	sbrs	r22, 0
    10ae:	1b c0       	rjmp	.+54     	; 0x10e6 <__floatsisf+0x6c>
    10b0:	6f 5f       	subi	r22, 0xFF	; 255
    10b2:	7f 4f       	sbci	r23, 0xFF	; 255
    10b4:	8f 4f       	sbci	r24, 0xFF	; 255
    10b6:	9f 4f       	sbci	r25, 0xFF	; 255
    10b8:	16 c0       	rjmp	.+44     	; 0x10e6 <__floatsisf+0x6c>
    10ba:	88 23       	and	r24, r24
    10bc:	11 f0       	breq	.+4      	; 0x10c2 <__floatsisf+0x48>
    10be:	96 e9       	ldi	r25, 0x96	; 150
    10c0:	11 c0       	rjmp	.+34     	; 0x10e4 <__floatsisf+0x6a>
    10c2:	77 23       	and	r23, r23
    10c4:	21 f0       	breq	.+8      	; 0x10ce <__floatsisf+0x54>
    10c6:	9e e8       	ldi	r25, 0x8E	; 142
    10c8:	87 2f       	mov	r24, r23
    10ca:	76 2f       	mov	r23, r22
    10cc:	05 c0       	rjmp	.+10     	; 0x10d8 <__floatsisf+0x5e>
    10ce:	66 23       	and	r22, r22
    10d0:	71 f0       	breq	.+28     	; 0x10ee <__floatsisf+0x74>
    10d2:	96 e8       	ldi	r25, 0x86	; 134
    10d4:	86 2f       	mov	r24, r22
    10d6:	70 e0       	ldi	r23, 0x00	; 0
    10d8:	60 e0       	ldi	r22, 0x00	; 0
    10da:	2a f0       	brmi	.+10     	; 0x10e6 <__floatsisf+0x6c>
    10dc:	9a 95       	dec	r25
    10de:	66 0f       	add	r22, r22
    10e0:	77 1f       	adc	r23, r23
    10e2:	88 1f       	adc	r24, r24
    10e4:	da f7       	brpl	.-10     	; 0x10dc <__floatsisf+0x62>
    10e6:	88 0f       	add	r24, r24
    10e8:	96 95       	lsr	r25
    10ea:	87 95       	ror	r24
    10ec:	97 f9       	bld	r25, 7
    10ee:	08 95       	ret

000010f0 <__fp_cmp>:
    10f0:	99 0f       	add	r25, r25
    10f2:	00 08       	sbc	r0, r0
    10f4:	55 0f       	add	r21, r21
    10f6:	aa 0b       	sbc	r26, r26
    10f8:	e0 e8       	ldi	r30, 0x80	; 128
    10fa:	fe ef       	ldi	r31, 0xFE	; 254
    10fc:	16 16       	cp	r1, r22
    10fe:	17 06       	cpc	r1, r23
    1100:	e8 07       	cpc	r30, r24
    1102:	f9 07       	cpc	r31, r25
    1104:	c0 f0       	brcs	.+48     	; 0x1136 <__fp_cmp+0x46>
    1106:	12 16       	cp	r1, r18
    1108:	13 06       	cpc	r1, r19
    110a:	e4 07       	cpc	r30, r20
    110c:	f5 07       	cpc	r31, r21
    110e:	98 f0       	brcs	.+38     	; 0x1136 <__fp_cmp+0x46>
    1110:	62 1b       	sub	r22, r18
    1112:	73 0b       	sbc	r23, r19
    1114:	84 0b       	sbc	r24, r20
    1116:	95 0b       	sbc	r25, r21
    1118:	39 f4       	brne	.+14     	; 0x1128 <__fp_cmp+0x38>
    111a:	0a 26       	eor	r0, r26
    111c:	61 f0       	breq	.+24     	; 0x1136 <__fp_cmp+0x46>
    111e:	23 2b       	or	r18, r19
    1120:	24 2b       	or	r18, r20
    1122:	25 2b       	or	r18, r21
    1124:	21 f4       	brne	.+8      	; 0x112e <__fp_cmp+0x3e>
    1126:	08 95       	ret
    1128:	0a 26       	eor	r0, r26
    112a:	09 f4       	brne	.+2      	; 0x112e <__fp_cmp+0x3e>
    112c:	a1 40       	sbci	r26, 0x01	; 1
    112e:	a6 95       	lsr	r26
    1130:	8f ef       	ldi	r24, 0xFF	; 255
    1132:	81 1d       	adc	r24, r1
    1134:	81 1d       	adc	r24, r1
    1136:	08 95       	ret

00001138 <__fp_inf>:
    1138:	97 f9       	bld	r25, 7
    113a:	9f 67       	ori	r25, 0x7F	; 127
    113c:	80 e8       	ldi	r24, 0x80	; 128
    113e:	70 e0       	ldi	r23, 0x00	; 0
    1140:	60 e0       	ldi	r22, 0x00	; 0
    1142:	08 95       	ret

00001144 <__fp_nan>:
    1144:	9f ef       	ldi	r25, 0xFF	; 255
    1146:	80 ec       	ldi	r24, 0xC0	; 192
    1148:	08 95       	ret

0000114a <__fp_pscA>:
    114a:	00 24       	eor	r0, r0
    114c:	0a 94       	dec	r0
    114e:	16 16       	cp	r1, r22
    1150:	17 06       	cpc	r1, r23
    1152:	18 06       	cpc	r1, r24
    1154:	09 06       	cpc	r0, r25
    1156:	08 95       	ret

00001158 <__fp_pscB>:
    1158:	00 24       	eor	r0, r0
    115a:	0a 94       	dec	r0
    115c:	12 16       	cp	r1, r18
    115e:	13 06       	cpc	r1, r19
    1160:	14 06       	cpc	r1, r20
    1162:	05 06       	cpc	r0, r21
    1164:	08 95       	ret

00001166 <__fp_round>:
    1166:	09 2e       	mov	r0, r25
    1168:	03 94       	inc	r0
    116a:	00 0c       	add	r0, r0
    116c:	11 f4       	brne	.+4      	; 0x1172 <__fp_round+0xc>
    116e:	88 23       	and	r24, r24
    1170:	52 f0       	brmi	.+20     	; 0x1186 <__fp_round+0x20>
    1172:	bb 0f       	add	r27, r27
    1174:	40 f4       	brcc	.+16     	; 0x1186 <__fp_round+0x20>
    1176:	bf 2b       	or	r27, r31
    1178:	11 f4       	brne	.+4      	; 0x117e <__fp_round+0x18>
    117a:	60 ff       	sbrs	r22, 0
    117c:	04 c0       	rjmp	.+8      	; 0x1186 <__fp_round+0x20>
    117e:	6f 5f       	subi	r22, 0xFF	; 255
    1180:	7f 4f       	sbci	r23, 0xFF	; 255
    1182:	8f 4f       	sbci	r24, 0xFF	; 255
    1184:	9f 4f       	sbci	r25, 0xFF	; 255
    1186:	08 95       	ret

00001188 <__fp_split3>:
    1188:	57 fd       	sbrc	r21, 7
    118a:	90 58       	subi	r25, 0x80	; 128
    118c:	44 0f       	add	r20, r20
    118e:	55 1f       	adc	r21, r21
    1190:	59 f0       	breq	.+22     	; 0x11a8 <__fp_splitA+0x10>
    1192:	5f 3f       	cpi	r21, 0xFF	; 255
    1194:	71 f0       	breq	.+28     	; 0x11b2 <__fp_splitA+0x1a>
    1196:	47 95       	ror	r20

00001198 <__fp_splitA>:
    1198:	88 0f       	add	r24, r24
    119a:	97 fb       	bst	r25, 7
    119c:	99 1f       	adc	r25, r25
    119e:	61 f0       	breq	.+24     	; 0x11b8 <__fp_splitA+0x20>
    11a0:	9f 3f       	cpi	r25, 0xFF	; 255
    11a2:	79 f0       	breq	.+30     	; 0x11c2 <__fp_splitA+0x2a>
    11a4:	87 95       	ror	r24
    11a6:	08 95       	ret
    11a8:	12 16       	cp	r1, r18
    11aa:	13 06       	cpc	r1, r19
    11ac:	14 06       	cpc	r1, r20
    11ae:	55 1f       	adc	r21, r21
    11b0:	f2 cf       	rjmp	.-28     	; 0x1196 <__fp_split3+0xe>
    11b2:	46 95       	lsr	r20
    11b4:	f1 df       	rcall	.-30     	; 0x1198 <__fp_splitA>
    11b6:	08 c0       	rjmp	.+16     	; 0x11c8 <__fp_splitA+0x30>
    11b8:	16 16       	cp	r1, r22
    11ba:	17 06       	cpc	r1, r23
    11bc:	18 06       	cpc	r1, r24
    11be:	99 1f       	adc	r25, r25
    11c0:	f1 cf       	rjmp	.-30     	; 0x11a4 <__fp_splitA+0xc>
    11c2:	86 95       	lsr	r24
    11c4:	71 05       	cpc	r23, r1
    11c6:	61 05       	cpc	r22, r1
    11c8:	08 94       	sec
    11ca:	08 95       	ret

000011cc <__fp_zero>:
    11cc:	e8 94       	clt

000011ce <__fp_szero>:
    11ce:	bb 27       	eor	r27, r27
    11d0:	66 27       	eor	r22, r22
    11d2:	77 27       	eor	r23, r23
    11d4:	cb 01       	movw	r24, r22
    11d6:	97 f9       	bld	r25, 7
    11d8:	08 95       	ret

000011da <atoi>:
    11da:	fc 01       	movw	r30, r24
    11dc:	88 27       	eor	r24, r24
    11de:	99 27       	eor	r25, r25
    11e0:	e8 94       	clt
    11e2:	21 91       	ld	r18, Z+
    11e4:	20 32       	cpi	r18, 0x20	; 32
    11e6:	e9 f3       	breq	.-6      	; 0x11e2 <atoi+0x8>
    11e8:	29 30       	cpi	r18, 0x09	; 9
    11ea:	10 f0       	brcs	.+4      	; 0x11f0 <atoi+0x16>
    11ec:	2e 30       	cpi	r18, 0x0E	; 14
    11ee:	c8 f3       	brcs	.-14     	; 0x11e2 <atoi+0x8>
    11f0:	2b 32       	cpi	r18, 0x2B	; 43
    11f2:	41 f0       	breq	.+16     	; 0x1204 <atoi+0x2a>
    11f4:	2d 32       	cpi	r18, 0x2D	; 45
    11f6:	39 f4       	brne	.+14     	; 0x1206 <atoi+0x2c>
    11f8:	68 94       	set
    11fa:	04 c0       	rjmp	.+8      	; 0x1204 <atoi+0x2a>
    11fc:	0e 94 25 09 	call	0x124a	; 0x124a <__mulhi_const_10>
    1200:	82 0f       	add	r24, r18
    1202:	91 1d       	adc	r25, r1
    1204:	21 91       	ld	r18, Z+
    1206:	20 53       	subi	r18, 0x30	; 48
    1208:	2a 30       	cpi	r18, 0x0A	; 10
    120a:	c0 f3       	brcs	.-16     	; 0x11fc <atoi+0x22>
    120c:	1e f4       	brtc	.+6      	; 0x1214 <atoi+0x3a>
    120e:	90 95       	com	r25
    1210:	81 95       	neg	r24
    1212:	9f 4f       	sbci	r25, 0xFF	; 255
    1214:	08 95       	ret

00001216 <__itoa_ncheck>:
    1216:	bb 27       	eor	r27, r27
    1218:	4a 30       	cpi	r20, 0x0A	; 10
    121a:	31 f4       	brne	.+12     	; 0x1228 <__itoa_ncheck+0x12>
    121c:	99 23       	and	r25, r25
    121e:	22 f4       	brpl	.+8      	; 0x1228 <__itoa_ncheck+0x12>
    1220:	bd e2       	ldi	r27, 0x2D	; 45
    1222:	90 95       	com	r25
    1224:	81 95       	neg	r24
    1226:	9f 4f       	sbci	r25, 0xFF	; 255
    1228:	0c 94 50 09 	jmp	0x12a0	; 0x12a0 <__utoa_common>

0000122c <__ltoa_ncheck>:
    122c:	bb 27       	eor	r27, r27
    122e:	2a 30       	cpi	r18, 0x0A	; 10
    1230:	51 f4       	brne	.+20     	; 0x1246 <__ltoa_ncheck+0x1a>
    1232:	99 23       	and	r25, r25
    1234:	42 f4       	brpl	.+16     	; 0x1246 <__ltoa_ncheck+0x1a>
    1236:	bd e2       	ldi	r27, 0x2D	; 45
    1238:	90 95       	com	r25
    123a:	80 95       	com	r24
    123c:	70 95       	com	r23
    123e:	61 95       	neg	r22
    1240:	7f 4f       	sbci	r23, 0xFF	; 255
    1242:	8f 4f       	sbci	r24, 0xFF	; 255
    1244:	9f 4f       	sbci	r25, 0xFF	; 255
    1246:	0c 94 2e 09 	jmp	0x125c	; 0x125c <__ultoa_common>

0000124a <__mulhi_const_10>:
    124a:	7a e0       	ldi	r23, 0x0A	; 10
    124c:	97 9f       	mul	r25, r23
    124e:	90 2d       	mov	r25, r0
    1250:	87 9f       	mul	r24, r23
    1252:	80 2d       	mov	r24, r0
    1254:	91 0d       	add	r25, r1
    1256:	11 24       	eor	r1, r1
    1258:	08 95       	ret

0000125a <__ultoa_ncheck>:
    125a:	bb 27       	eor	r27, r27

0000125c <__ultoa_common>:
    125c:	fa 01       	movw	r30, r20
    125e:	a6 2f       	mov	r26, r22
    1260:	62 17       	cp	r22, r18
    1262:	71 05       	cpc	r23, r1
    1264:	81 05       	cpc	r24, r1
    1266:	91 05       	cpc	r25, r1
    1268:	33 0b       	sbc	r19, r19
    126a:	30 fb       	bst	r19, 0
    126c:	66 f0       	brts	.+24     	; 0x1286 <__ultoa_common+0x2a>
    126e:	aa 27       	eor	r26, r26
    1270:	66 0f       	add	r22, r22
    1272:	77 1f       	adc	r23, r23
    1274:	88 1f       	adc	r24, r24
    1276:	99 1f       	adc	r25, r25
    1278:	aa 1f       	adc	r26, r26
    127a:	a2 17       	cp	r26, r18
    127c:	10 f0       	brcs	.+4      	; 0x1282 <__ultoa_common+0x26>
    127e:	a2 1b       	sub	r26, r18
    1280:	63 95       	inc	r22
    1282:	38 50       	subi	r19, 0x08	; 8
    1284:	a9 f7       	brne	.-22     	; 0x1270 <__ultoa_common+0x14>
    1286:	a0 5d       	subi	r26, 0xD0	; 208
    1288:	aa 33       	cpi	r26, 0x3A	; 58
    128a:	08 f0       	brcs	.+2      	; 0x128e <__ultoa_common+0x32>
    128c:	a9 5d       	subi	r26, 0xD9	; 217
    128e:	a1 93       	st	Z+, r26
    1290:	36 f7       	brtc	.-52     	; 0x125e <__ultoa_common+0x2>
    1292:	b1 11       	cpse	r27, r1
    1294:	b1 93       	st	Z+, r27
    1296:	10 82       	st	Z, r1
    1298:	ca 01       	movw	r24, r20
    129a:	0c 94 82 0b 	jmp	0x1704	; 0x1704 <strrev>

0000129e <__utoa_ncheck>:
    129e:	bb 27       	eor	r27, r27

000012a0 <__utoa_common>:
    12a0:	fb 01       	movw	r30, r22
    12a2:	55 27       	eor	r21, r21
    12a4:	aa 27       	eor	r26, r26
    12a6:	88 0f       	add	r24, r24
    12a8:	99 1f       	adc	r25, r25
    12aa:	aa 1f       	adc	r26, r26
    12ac:	a4 17       	cp	r26, r20
    12ae:	10 f0       	brcs	.+4      	; 0x12b4 <__utoa_common+0x14>
    12b0:	a4 1b       	sub	r26, r20
    12b2:	83 95       	inc	r24
    12b4:	50 51       	subi	r21, 0x10	; 16
    12b6:	b9 f7       	brne	.-18     	; 0x12a6 <__utoa_common+0x6>
    12b8:	a0 5d       	subi	r26, 0xD0	; 208
    12ba:	aa 33       	cpi	r26, 0x3A	; 58
    12bc:	08 f0       	brcs	.+2      	; 0x12c0 <__utoa_common+0x20>
    12be:	a9 5d       	subi	r26, 0xD9	; 217
    12c0:	a1 93       	st	Z+, r26
    12c2:	00 97       	sbiw	r24, 0x00	; 0
    12c4:	79 f7       	brne	.-34     	; 0x12a4 <__utoa_common+0x4>
    12c6:	b1 11       	cpse	r27, r1
    12c8:	b1 93       	st	Z+, r27
    12ca:	11 92       	st	Z+, r1
    12cc:	cb 01       	movw	r24, r22
    12ce:	0c 94 82 0b 	jmp	0x1704	; 0x1704 <strrev>

000012d2 <sprintf>:
    12d2:	ae e0       	ldi	r26, 0x0E	; 14
    12d4:	b0 e0       	ldi	r27, 0x00	; 0
    12d6:	ef e6       	ldi	r30, 0x6F	; 111
    12d8:	f9 e0       	ldi	r31, 0x09	; 9
    12da:	0c 94 3a 0c 	jmp	0x1874	; 0x1874 <__prologue_saves__+0x1c>
    12de:	0d 89       	ldd	r16, Y+21	; 0x15
    12e0:	1e 89       	ldd	r17, Y+22	; 0x16
    12e2:	86 e0       	ldi	r24, 0x06	; 6
    12e4:	8c 83       	std	Y+4, r24	; 0x04
    12e6:	1a 83       	std	Y+2, r17	; 0x02
    12e8:	09 83       	std	Y+1, r16	; 0x01
    12ea:	8f ef       	ldi	r24, 0xFF	; 255
    12ec:	9f e7       	ldi	r25, 0x7F	; 127
    12ee:	9e 83       	std	Y+6, r25	; 0x06
    12f0:	8d 83       	std	Y+5, r24	; 0x05
    12f2:	ae 01       	movw	r20, r28
    12f4:	47 5e       	subi	r20, 0xE7	; 231
    12f6:	5f 4f       	sbci	r21, 0xFF	; 255
    12f8:	6f 89       	ldd	r22, Y+23	; 0x17
    12fa:	78 8d       	ldd	r23, Y+24	; 0x18
    12fc:	ce 01       	movw	r24, r28
    12fe:	01 96       	adiw	r24, 0x01	; 1
    1300:	0e 94 8b 09 	call	0x1316	; 0x1316 <vfprintf>
    1304:	ef 81       	ldd	r30, Y+7	; 0x07
    1306:	f8 85       	ldd	r31, Y+8	; 0x08
    1308:	e0 0f       	add	r30, r16
    130a:	f1 1f       	adc	r31, r17
    130c:	10 82       	st	Z, r1
    130e:	2e 96       	adiw	r28, 0x0e	; 14
    1310:	e4 e0       	ldi	r30, 0x04	; 4
    1312:	0c 94 56 0c 	jmp	0x18ac	; 0x18ac <__epilogue_restores__+0x1c>

00001316 <vfprintf>:
    1316:	ab e0       	ldi	r26, 0x0B	; 11
    1318:	b0 e0       	ldi	r27, 0x00	; 0
    131a:	e1 e9       	ldi	r30, 0x91	; 145
    131c:	f9 e0       	ldi	r31, 0x09	; 9
    131e:	0c 94 2c 0c 	jmp	0x1858	; 0x1858 <__prologue_saves__>
    1322:	6c 01       	movw	r12, r24
    1324:	7b 01       	movw	r14, r22
    1326:	8a 01       	movw	r16, r20
    1328:	fc 01       	movw	r30, r24
    132a:	17 82       	std	Z+7, r1	; 0x07
    132c:	16 82       	std	Z+6, r1	; 0x06
    132e:	83 81       	ldd	r24, Z+3	; 0x03
    1330:	81 ff       	sbrs	r24, 1
    1332:	cc c1       	rjmp	.+920    	; 0x16cc <vfprintf+0x3b6>
    1334:	ce 01       	movw	r24, r28
    1336:	01 96       	adiw	r24, 0x01	; 1
    1338:	3c 01       	movw	r6, r24
    133a:	f6 01       	movw	r30, r12
    133c:	93 81       	ldd	r25, Z+3	; 0x03
    133e:	f7 01       	movw	r30, r14
    1340:	93 fd       	sbrc	r25, 3
    1342:	85 91       	lpm	r24, Z+
    1344:	93 ff       	sbrs	r25, 3
    1346:	81 91       	ld	r24, Z+
    1348:	7f 01       	movw	r14, r30
    134a:	88 23       	and	r24, r24
    134c:	09 f4       	brne	.+2      	; 0x1350 <vfprintf+0x3a>
    134e:	ba c1       	rjmp	.+884    	; 0x16c4 <vfprintf+0x3ae>
    1350:	85 32       	cpi	r24, 0x25	; 37
    1352:	39 f4       	brne	.+14     	; 0x1362 <vfprintf+0x4c>
    1354:	93 fd       	sbrc	r25, 3
    1356:	85 91       	lpm	r24, Z+
    1358:	93 ff       	sbrs	r25, 3
    135a:	81 91       	ld	r24, Z+
    135c:	7f 01       	movw	r14, r30
    135e:	85 32       	cpi	r24, 0x25	; 37
    1360:	29 f4       	brne	.+10     	; 0x136c <vfprintf+0x56>
    1362:	b6 01       	movw	r22, r12
    1364:	90 e0       	ldi	r25, 0x00	; 0
    1366:	0e 94 92 0b 	call	0x1724	; 0x1724 <fputc>
    136a:	e7 cf       	rjmp	.-50     	; 0x133a <vfprintf+0x24>
    136c:	91 2c       	mov	r9, r1
    136e:	21 2c       	mov	r2, r1
    1370:	31 2c       	mov	r3, r1
    1372:	ff e1       	ldi	r31, 0x1F	; 31
    1374:	f3 15       	cp	r31, r3
    1376:	d8 f0       	brcs	.+54     	; 0x13ae <vfprintf+0x98>
    1378:	8b 32       	cpi	r24, 0x2B	; 43
    137a:	79 f0       	breq	.+30     	; 0x139a <vfprintf+0x84>
    137c:	38 f4       	brcc	.+14     	; 0x138c <vfprintf+0x76>
    137e:	80 32       	cpi	r24, 0x20	; 32
    1380:	79 f0       	breq	.+30     	; 0x13a0 <vfprintf+0x8a>
    1382:	83 32       	cpi	r24, 0x23	; 35
    1384:	a1 f4       	brne	.+40     	; 0x13ae <vfprintf+0x98>
    1386:	23 2d       	mov	r18, r3
    1388:	20 61       	ori	r18, 0x10	; 16
    138a:	1d c0       	rjmp	.+58     	; 0x13c6 <vfprintf+0xb0>
    138c:	8d 32       	cpi	r24, 0x2D	; 45
    138e:	61 f0       	breq	.+24     	; 0x13a8 <vfprintf+0x92>
    1390:	80 33       	cpi	r24, 0x30	; 48
    1392:	69 f4       	brne	.+26     	; 0x13ae <vfprintf+0x98>
    1394:	23 2d       	mov	r18, r3
    1396:	21 60       	ori	r18, 0x01	; 1
    1398:	16 c0       	rjmp	.+44     	; 0x13c6 <vfprintf+0xb0>
    139a:	83 2d       	mov	r24, r3
    139c:	82 60       	ori	r24, 0x02	; 2
    139e:	38 2e       	mov	r3, r24
    13a0:	e3 2d       	mov	r30, r3
    13a2:	e4 60       	ori	r30, 0x04	; 4
    13a4:	3e 2e       	mov	r3, r30
    13a6:	2a c0       	rjmp	.+84     	; 0x13fc <vfprintf+0xe6>
    13a8:	f3 2d       	mov	r31, r3
    13aa:	f8 60       	ori	r31, 0x08	; 8
    13ac:	1d c0       	rjmp	.+58     	; 0x13e8 <vfprintf+0xd2>
    13ae:	37 fc       	sbrc	r3, 7
    13b0:	2d c0       	rjmp	.+90     	; 0x140c <vfprintf+0xf6>
    13b2:	20 ed       	ldi	r18, 0xD0	; 208
    13b4:	28 0f       	add	r18, r24
    13b6:	2a 30       	cpi	r18, 0x0A	; 10
    13b8:	40 f0       	brcs	.+16     	; 0x13ca <vfprintf+0xb4>
    13ba:	8e 32       	cpi	r24, 0x2E	; 46
    13bc:	b9 f4       	brne	.+46     	; 0x13ec <vfprintf+0xd6>
    13be:	36 fc       	sbrc	r3, 6
    13c0:	81 c1       	rjmp	.+770    	; 0x16c4 <vfprintf+0x3ae>
    13c2:	23 2d       	mov	r18, r3
    13c4:	20 64       	ori	r18, 0x40	; 64
    13c6:	32 2e       	mov	r3, r18
    13c8:	19 c0       	rjmp	.+50     	; 0x13fc <vfprintf+0xe6>
    13ca:	36 fe       	sbrs	r3, 6
    13cc:	06 c0       	rjmp	.+12     	; 0x13da <vfprintf+0xc4>
    13ce:	8a e0       	ldi	r24, 0x0A	; 10
    13d0:	98 9e       	mul	r9, r24
    13d2:	20 0d       	add	r18, r0
    13d4:	11 24       	eor	r1, r1
    13d6:	92 2e       	mov	r9, r18
    13d8:	11 c0       	rjmp	.+34     	; 0x13fc <vfprintf+0xe6>
    13da:	ea e0       	ldi	r30, 0x0A	; 10
    13dc:	2e 9e       	mul	r2, r30
    13de:	20 0d       	add	r18, r0
    13e0:	11 24       	eor	r1, r1
    13e2:	22 2e       	mov	r2, r18
    13e4:	f3 2d       	mov	r31, r3
    13e6:	f0 62       	ori	r31, 0x20	; 32
    13e8:	3f 2e       	mov	r3, r31
    13ea:	08 c0       	rjmp	.+16     	; 0x13fc <vfprintf+0xe6>
    13ec:	8c 36       	cpi	r24, 0x6C	; 108
    13ee:	21 f4       	brne	.+8      	; 0x13f8 <vfprintf+0xe2>
    13f0:	83 2d       	mov	r24, r3
    13f2:	80 68       	ori	r24, 0x80	; 128
    13f4:	38 2e       	mov	r3, r24
    13f6:	02 c0       	rjmp	.+4      	; 0x13fc <vfprintf+0xe6>
    13f8:	88 36       	cpi	r24, 0x68	; 104
    13fa:	41 f4       	brne	.+16     	; 0x140c <vfprintf+0xf6>
    13fc:	f7 01       	movw	r30, r14
    13fe:	93 fd       	sbrc	r25, 3
    1400:	85 91       	lpm	r24, Z+
    1402:	93 ff       	sbrs	r25, 3
    1404:	81 91       	ld	r24, Z+
    1406:	7f 01       	movw	r14, r30
    1408:	81 11       	cpse	r24, r1
    140a:	b3 cf       	rjmp	.-154    	; 0x1372 <vfprintf+0x5c>
    140c:	98 2f       	mov	r25, r24
    140e:	9f 7d       	andi	r25, 0xDF	; 223
    1410:	95 54       	subi	r25, 0x45	; 69
    1412:	93 30       	cpi	r25, 0x03	; 3
    1414:	28 f4       	brcc	.+10     	; 0x1420 <vfprintf+0x10a>
    1416:	0c 5f       	subi	r16, 0xFC	; 252
    1418:	1f 4f       	sbci	r17, 0xFF	; 255
    141a:	9f e3       	ldi	r25, 0x3F	; 63
    141c:	99 83       	std	Y+1, r25	; 0x01
    141e:	0d c0       	rjmp	.+26     	; 0x143a <vfprintf+0x124>
    1420:	83 36       	cpi	r24, 0x63	; 99
    1422:	31 f0       	breq	.+12     	; 0x1430 <vfprintf+0x11a>
    1424:	83 37       	cpi	r24, 0x73	; 115
    1426:	71 f0       	breq	.+28     	; 0x1444 <vfprintf+0x12e>
    1428:	83 35       	cpi	r24, 0x53	; 83
    142a:	09 f0       	breq	.+2      	; 0x142e <vfprintf+0x118>
    142c:	59 c0       	rjmp	.+178    	; 0x14e0 <vfprintf+0x1ca>
    142e:	21 c0       	rjmp	.+66     	; 0x1472 <vfprintf+0x15c>
    1430:	f8 01       	movw	r30, r16
    1432:	80 81       	ld	r24, Z
    1434:	89 83       	std	Y+1, r24	; 0x01
    1436:	0e 5f       	subi	r16, 0xFE	; 254
    1438:	1f 4f       	sbci	r17, 0xFF	; 255
    143a:	88 24       	eor	r8, r8
    143c:	83 94       	inc	r8
    143e:	91 2c       	mov	r9, r1
    1440:	53 01       	movw	r10, r6
    1442:	13 c0       	rjmp	.+38     	; 0x146a <vfprintf+0x154>
    1444:	28 01       	movw	r4, r16
    1446:	f2 e0       	ldi	r31, 0x02	; 2
    1448:	4f 0e       	add	r4, r31
    144a:	51 1c       	adc	r5, r1
    144c:	f8 01       	movw	r30, r16
    144e:	a0 80       	ld	r10, Z
    1450:	b1 80       	ldd	r11, Z+1	; 0x01
    1452:	36 fe       	sbrs	r3, 6
    1454:	03 c0       	rjmp	.+6      	; 0x145c <vfprintf+0x146>
    1456:	69 2d       	mov	r22, r9
    1458:	70 e0       	ldi	r23, 0x00	; 0
    145a:	02 c0       	rjmp	.+4      	; 0x1460 <vfprintf+0x14a>
    145c:	6f ef       	ldi	r22, 0xFF	; 255
    145e:	7f ef       	ldi	r23, 0xFF	; 255
    1460:	c5 01       	movw	r24, r10
    1462:	0e 94 77 0b 	call	0x16ee	; 0x16ee <strnlen>
    1466:	4c 01       	movw	r8, r24
    1468:	82 01       	movw	r16, r4
    146a:	f3 2d       	mov	r31, r3
    146c:	ff 77       	andi	r31, 0x7F	; 127
    146e:	3f 2e       	mov	r3, r31
    1470:	16 c0       	rjmp	.+44     	; 0x149e <vfprintf+0x188>
    1472:	28 01       	movw	r4, r16
    1474:	22 e0       	ldi	r18, 0x02	; 2
    1476:	42 0e       	add	r4, r18
    1478:	51 1c       	adc	r5, r1
    147a:	f8 01       	movw	r30, r16
    147c:	a0 80       	ld	r10, Z
    147e:	b1 80       	ldd	r11, Z+1	; 0x01
    1480:	36 fe       	sbrs	r3, 6
    1482:	03 c0       	rjmp	.+6      	; 0x148a <vfprintf+0x174>
    1484:	69 2d       	mov	r22, r9
    1486:	70 e0       	ldi	r23, 0x00	; 0
    1488:	02 c0       	rjmp	.+4      	; 0x148e <vfprintf+0x178>
    148a:	6f ef       	ldi	r22, 0xFF	; 255
    148c:	7f ef       	ldi	r23, 0xFF	; 255
    148e:	c5 01       	movw	r24, r10
    1490:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <strnlen_P>
    1494:	4c 01       	movw	r8, r24
    1496:	f3 2d       	mov	r31, r3
    1498:	f0 68       	ori	r31, 0x80	; 128
    149a:	3f 2e       	mov	r3, r31
    149c:	82 01       	movw	r16, r4
    149e:	33 fc       	sbrc	r3, 3
    14a0:	1b c0       	rjmp	.+54     	; 0x14d8 <vfprintf+0x1c2>
    14a2:	82 2d       	mov	r24, r2
    14a4:	90 e0       	ldi	r25, 0x00	; 0
    14a6:	88 16       	cp	r8, r24
    14a8:	99 06       	cpc	r9, r25
    14aa:	b0 f4       	brcc	.+44     	; 0x14d8 <vfprintf+0x1c2>
    14ac:	b6 01       	movw	r22, r12
    14ae:	80 e2       	ldi	r24, 0x20	; 32
    14b0:	90 e0       	ldi	r25, 0x00	; 0
    14b2:	0e 94 92 0b 	call	0x1724	; 0x1724 <fputc>
    14b6:	2a 94       	dec	r2
    14b8:	f4 cf       	rjmp	.-24     	; 0x14a2 <vfprintf+0x18c>
    14ba:	f5 01       	movw	r30, r10
    14bc:	37 fc       	sbrc	r3, 7
    14be:	85 91       	lpm	r24, Z+
    14c0:	37 fe       	sbrs	r3, 7
    14c2:	81 91       	ld	r24, Z+
    14c4:	5f 01       	movw	r10, r30
    14c6:	b6 01       	movw	r22, r12
    14c8:	90 e0       	ldi	r25, 0x00	; 0
    14ca:	0e 94 92 0b 	call	0x1724	; 0x1724 <fputc>
    14ce:	21 10       	cpse	r2, r1
    14d0:	2a 94       	dec	r2
    14d2:	21 e0       	ldi	r18, 0x01	; 1
    14d4:	82 1a       	sub	r8, r18
    14d6:	91 08       	sbc	r9, r1
    14d8:	81 14       	cp	r8, r1
    14da:	91 04       	cpc	r9, r1
    14dc:	71 f7       	brne	.-36     	; 0x14ba <vfprintf+0x1a4>
    14de:	e8 c0       	rjmp	.+464    	; 0x16b0 <vfprintf+0x39a>
    14e0:	84 36       	cpi	r24, 0x64	; 100
    14e2:	11 f0       	breq	.+4      	; 0x14e8 <vfprintf+0x1d2>
    14e4:	89 36       	cpi	r24, 0x69	; 105
    14e6:	41 f5       	brne	.+80     	; 0x1538 <vfprintf+0x222>
    14e8:	f8 01       	movw	r30, r16
    14ea:	37 fe       	sbrs	r3, 7
    14ec:	07 c0       	rjmp	.+14     	; 0x14fc <vfprintf+0x1e6>
    14ee:	60 81       	ld	r22, Z
    14f0:	71 81       	ldd	r23, Z+1	; 0x01
    14f2:	82 81       	ldd	r24, Z+2	; 0x02
    14f4:	93 81       	ldd	r25, Z+3	; 0x03
    14f6:	0c 5f       	subi	r16, 0xFC	; 252
    14f8:	1f 4f       	sbci	r17, 0xFF	; 255
    14fa:	08 c0       	rjmp	.+16     	; 0x150c <vfprintf+0x1f6>
    14fc:	60 81       	ld	r22, Z
    14fe:	71 81       	ldd	r23, Z+1	; 0x01
    1500:	07 2e       	mov	r0, r23
    1502:	00 0c       	add	r0, r0
    1504:	88 0b       	sbc	r24, r24
    1506:	99 0b       	sbc	r25, r25
    1508:	0e 5f       	subi	r16, 0xFE	; 254
    150a:	1f 4f       	sbci	r17, 0xFF	; 255
    150c:	f3 2d       	mov	r31, r3
    150e:	ff 76       	andi	r31, 0x6F	; 111
    1510:	3f 2e       	mov	r3, r31
    1512:	97 ff       	sbrs	r25, 7
    1514:	09 c0       	rjmp	.+18     	; 0x1528 <vfprintf+0x212>
    1516:	90 95       	com	r25
    1518:	80 95       	com	r24
    151a:	70 95       	com	r23
    151c:	61 95       	neg	r22
    151e:	7f 4f       	sbci	r23, 0xFF	; 255
    1520:	8f 4f       	sbci	r24, 0xFF	; 255
    1522:	9f 4f       	sbci	r25, 0xFF	; 255
    1524:	f0 68       	ori	r31, 0x80	; 128
    1526:	3f 2e       	mov	r3, r31
    1528:	2a e0       	ldi	r18, 0x0A	; 10
    152a:	30 e0       	ldi	r19, 0x00	; 0
    152c:	a3 01       	movw	r20, r6
    152e:	0e 94 ce 0b 	call	0x179c	; 0x179c <__ultoa_invert>
    1532:	88 2e       	mov	r8, r24
    1534:	86 18       	sub	r8, r6
    1536:	45 c0       	rjmp	.+138    	; 0x15c2 <vfprintf+0x2ac>
    1538:	85 37       	cpi	r24, 0x75	; 117
    153a:	31 f4       	brne	.+12     	; 0x1548 <vfprintf+0x232>
    153c:	23 2d       	mov	r18, r3
    153e:	2f 7e       	andi	r18, 0xEF	; 239
    1540:	b2 2e       	mov	r11, r18
    1542:	2a e0       	ldi	r18, 0x0A	; 10
    1544:	30 e0       	ldi	r19, 0x00	; 0
    1546:	25 c0       	rjmp	.+74     	; 0x1592 <vfprintf+0x27c>
    1548:	93 2d       	mov	r25, r3
    154a:	99 7f       	andi	r25, 0xF9	; 249
    154c:	b9 2e       	mov	r11, r25
    154e:	8f 36       	cpi	r24, 0x6F	; 111
    1550:	c1 f0       	breq	.+48     	; 0x1582 <vfprintf+0x26c>
    1552:	18 f4       	brcc	.+6      	; 0x155a <vfprintf+0x244>
    1554:	88 35       	cpi	r24, 0x58	; 88
    1556:	79 f0       	breq	.+30     	; 0x1576 <vfprintf+0x260>
    1558:	b5 c0       	rjmp	.+362    	; 0x16c4 <vfprintf+0x3ae>
    155a:	80 37       	cpi	r24, 0x70	; 112
    155c:	19 f0       	breq	.+6      	; 0x1564 <vfprintf+0x24e>
    155e:	88 37       	cpi	r24, 0x78	; 120
    1560:	21 f0       	breq	.+8      	; 0x156a <vfprintf+0x254>
    1562:	b0 c0       	rjmp	.+352    	; 0x16c4 <vfprintf+0x3ae>
    1564:	e9 2f       	mov	r30, r25
    1566:	e0 61       	ori	r30, 0x10	; 16
    1568:	be 2e       	mov	r11, r30
    156a:	b4 fe       	sbrs	r11, 4
    156c:	0d c0       	rjmp	.+26     	; 0x1588 <vfprintf+0x272>
    156e:	fb 2d       	mov	r31, r11
    1570:	f4 60       	ori	r31, 0x04	; 4
    1572:	bf 2e       	mov	r11, r31
    1574:	09 c0       	rjmp	.+18     	; 0x1588 <vfprintf+0x272>
    1576:	34 fe       	sbrs	r3, 4
    1578:	0a c0       	rjmp	.+20     	; 0x158e <vfprintf+0x278>
    157a:	29 2f       	mov	r18, r25
    157c:	26 60       	ori	r18, 0x06	; 6
    157e:	b2 2e       	mov	r11, r18
    1580:	06 c0       	rjmp	.+12     	; 0x158e <vfprintf+0x278>
    1582:	28 e0       	ldi	r18, 0x08	; 8
    1584:	30 e0       	ldi	r19, 0x00	; 0
    1586:	05 c0       	rjmp	.+10     	; 0x1592 <vfprintf+0x27c>
    1588:	20 e1       	ldi	r18, 0x10	; 16
    158a:	30 e0       	ldi	r19, 0x00	; 0
    158c:	02 c0       	rjmp	.+4      	; 0x1592 <vfprintf+0x27c>
    158e:	20 e1       	ldi	r18, 0x10	; 16
    1590:	32 e0       	ldi	r19, 0x02	; 2
    1592:	f8 01       	movw	r30, r16
    1594:	b7 fe       	sbrs	r11, 7
    1596:	07 c0       	rjmp	.+14     	; 0x15a6 <vfprintf+0x290>
    1598:	60 81       	ld	r22, Z
    159a:	71 81       	ldd	r23, Z+1	; 0x01
    159c:	82 81       	ldd	r24, Z+2	; 0x02
    159e:	93 81       	ldd	r25, Z+3	; 0x03
    15a0:	0c 5f       	subi	r16, 0xFC	; 252
    15a2:	1f 4f       	sbci	r17, 0xFF	; 255
    15a4:	06 c0       	rjmp	.+12     	; 0x15b2 <vfprintf+0x29c>
    15a6:	60 81       	ld	r22, Z
    15a8:	71 81       	ldd	r23, Z+1	; 0x01
    15aa:	80 e0       	ldi	r24, 0x00	; 0
    15ac:	90 e0       	ldi	r25, 0x00	; 0
    15ae:	0e 5f       	subi	r16, 0xFE	; 254
    15b0:	1f 4f       	sbci	r17, 0xFF	; 255
    15b2:	a3 01       	movw	r20, r6
    15b4:	0e 94 ce 0b 	call	0x179c	; 0x179c <__ultoa_invert>
    15b8:	88 2e       	mov	r8, r24
    15ba:	86 18       	sub	r8, r6
    15bc:	fb 2d       	mov	r31, r11
    15be:	ff 77       	andi	r31, 0x7F	; 127
    15c0:	3f 2e       	mov	r3, r31
    15c2:	36 fe       	sbrs	r3, 6
    15c4:	0d c0       	rjmp	.+26     	; 0x15e0 <vfprintf+0x2ca>
    15c6:	23 2d       	mov	r18, r3
    15c8:	2e 7f       	andi	r18, 0xFE	; 254
    15ca:	a2 2e       	mov	r10, r18
    15cc:	89 14       	cp	r8, r9
    15ce:	58 f4       	brcc	.+22     	; 0x15e6 <vfprintf+0x2d0>
    15d0:	34 fe       	sbrs	r3, 4
    15d2:	0b c0       	rjmp	.+22     	; 0x15ea <vfprintf+0x2d4>
    15d4:	32 fc       	sbrc	r3, 2
    15d6:	09 c0       	rjmp	.+18     	; 0x15ea <vfprintf+0x2d4>
    15d8:	83 2d       	mov	r24, r3
    15da:	8e 7e       	andi	r24, 0xEE	; 238
    15dc:	a8 2e       	mov	r10, r24
    15de:	05 c0       	rjmp	.+10     	; 0x15ea <vfprintf+0x2d4>
    15e0:	b8 2c       	mov	r11, r8
    15e2:	a3 2c       	mov	r10, r3
    15e4:	03 c0       	rjmp	.+6      	; 0x15ec <vfprintf+0x2d6>
    15e6:	b8 2c       	mov	r11, r8
    15e8:	01 c0       	rjmp	.+2      	; 0x15ec <vfprintf+0x2d6>
    15ea:	b9 2c       	mov	r11, r9
    15ec:	a4 fe       	sbrs	r10, 4
    15ee:	0f c0       	rjmp	.+30     	; 0x160e <vfprintf+0x2f8>
    15f0:	fe 01       	movw	r30, r28
    15f2:	e8 0d       	add	r30, r8
    15f4:	f1 1d       	adc	r31, r1
    15f6:	80 81       	ld	r24, Z
    15f8:	80 33       	cpi	r24, 0x30	; 48
    15fa:	21 f4       	brne	.+8      	; 0x1604 <vfprintf+0x2ee>
    15fc:	9a 2d       	mov	r25, r10
    15fe:	99 7e       	andi	r25, 0xE9	; 233
    1600:	a9 2e       	mov	r10, r25
    1602:	09 c0       	rjmp	.+18     	; 0x1616 <vfprintf+0x300>
    1604:	a2 fe       	sbrs	r10, 2
    1606:	06 c0       	rjmp	.+12     	; 0x1614 <vfprintf+0x2fe>
    1608:	b3 94       	inc	r11
    160a:	b3 94       	inc	r11
    160c:	04 c0       	rjmp	.+8      	; 0x1616 <vfprintf+0x300>
    160e:	8a 2d       	mov	r24, r10
    1610:	86 78       	andi	r24, 0x86	; 134
    1612:	09 f0       	breq	.+2      	; 0x1616 <vfprintf+0x300>
    1614:	b3 94       	inc	r11
    1616:	a3 fc       	sbrc	r10, 3
    1618:	11 c0       	rjmp	.+34     	; 0x163c <vfprintf+0x326>
    161a:	a0 fe       	sbrs	r10, 0
    161c:	06 c0       	rjmp	.+12     	; 0x162a <vfprintf+0x314>
    161e:	b2 14       	cp	r11, r2
    1620:	88 f4       	brcc	.+34     	; 0x1644 <vfprintf+0x32e>
    1622:	28 0c       	add	r2, r8
    1624:	92 2c       	mov	r9, r2
    1626:	9b 18       	sub	r9, r11
    1628:	0e c0       	rjmp	.+28     	; 0x1646 <vfprintf+0x330>
    162a:	b2 14       	cp	r11, r2
    162c:	60 f4       	brcc	.+24     	; 0x1646 <vfprintf+0x330>
    162e:	b6 01       	movw	r22, r12
    1630:	80 e2       	ldi	r24, 0x20	; 32
    1632:	90 e0       	ldi	r25, 0x00	; 0
    1634:	0e 94 92 0b 	call	0x1724	; 0x1724 <fputc>
    1638:	b3 94       	inc	r11
    163a:	f7 cf       	rjmp	.-18     	; 0x162a <vfprintf+0x314>
    163c:	b2 14       	cp	r11, r2
    163e:	18 f4       	brcc	.+6      	; 0x1646 <vfprintf+0x330>
    1640:	2b 18       	sub	r2, r11
    1642:	02 c0       	rjmp	.+4      	; 0x1648 <vfprintf+0x332>
    1644:	98 2c       	mov	r9, r8
    1646:	21 2c       	mov	r2, r1
    1648:	a4 fe       	sbrs	r10, 4
    164a:	10 c0       	rjmp	.+32     	; 0x166c <vfprintf+0x356>
    164c:	b6 01       	movw	r22, r12
    164e:	80 e3       	ldi	r24, 0x30	; 48
    1650:	90 e0       	ldi	r25, 0x00	; 0
    1652:	0e 94 92 0b 	call	0x1724	; 0x1724 <fputc>
    1656:	a2 fe       	sbrs	r10, 2
    1658:	17 c0       	rjmp	.+46     	; 0x1688 <vfprintf+0x372>
    165a:	a1 fc       	sbrc	r10, 1
    165c:	03 c0       	rjmp	.+6      	; 0x1664 <vfprintf+0x34e>
    165e:	88 e7       	ldi	r24, 0x78	; 120
    1660:	90 e0       	ldi	r25, 0x00	; 0
    1662:	02 c0       	rjmp	.+4      	; 0x1668 <vfprintf+0x352>
    1664:	88 e5       	ldi	r24, 0x58	; 88
    1666:	90 e0       	ldi	r25, 0x00	; 0
    1668:	b6 01       	movw	r22, r12
    166a:	0c c0       	rjmp	.+24     	; 0x1684 <vfprintf+0x36e>
    166c:	8a 2d       	mov	r24, r10
    166e:	86 78       	andi	r24, 0x86	; 134
    1670:	59 f0       	breq	.+22     	; 0x1688 <vfprintf+0x372>
    1672:	a1 fe       	sbrs	r10, 1
    1674:	02 c0       	rjmp	.+4      	; 0x167a <vfprintf+0x364>
    1676:	8b e2       	ldi	r24, 0x2B	; 43
    1678:	01 c0       	rjmp	.+2      	; 0x167c <vfprintf+0x366>
    167a:	80 e2       	ldi	r24, 0x20	; 32
    167c:	a7 fc       	sbrc	r10, 7
    167e:	8d e2       	ldi	r24, 0x2D	; 45
    1680:	b6 01       	movw	r22, r12
    1682:	90 e0       	ldi	r25, 0x00	; 0
    1684:	0e 94 92 0b 	call	0x1724	; 0x1724 <fputc>
    1688:	89 14       	cp	r8, r9
    168a:	38 f4       	brcc	.+14     	; 0x169a <vfprintf+0x384>
    168c:	b6 01       	movw	r22, r12
    168e:	80 e3       	ldi	r24, 0x30	; 48
    1690:	90 e0       	ldi	r25, 0x00	; 0
    1692:	0e 94 92 0b 	call	0x1724	; 0x1724 <fputc>
    1696:	9a 94       	dec	r9
    1698:	f7 cf       	rjmp	.-18     	; 0x1688 <vfprintf+0x372>
    169a:	8a 94       	dec	r8
    169c:	f3 01       	movw	r30, r6
    169e:	e8 0d       	add	r30, r8
    16a0:	f1 1d       	adc	r31, r1
    16a2:	80 81       	ld	r24, Z
    16a4:	b6 01       	movw	r22, r12
    16a6:	90 e0       	ldi	r25, 0x00	; 0
    16a8:	0e 94 92 0b 	call	0x1724	; 0x1724 <fputc>
    16ac:	81 10       	cpse	r8, r1
    16ae:	f5 cf       	rjmp	.-22     	; 0x169a <vfprintf+0x384>
    16b0:	22 20       	and	r2, r2
    16b2:	09 f4       	brne	.+2      	; 0x16b6 <vfprintf+0x3a0>
    16b4:	42 ce       	rjmp	.-892    	; 0x133a <vfprintf+0x24>
    16b6:	b6 01       	movw	r22, r12
    16b8:	80 e2       	ldi	r24, 0x20	; 32
    16ba:	90 e0       	ldi	r25, 0x00	; 0
    16bc:	0e 94 92 0b 	call	0x1724	; 0x1724 <fputc>
    16c0:	2a 94       	dec	r2
    16c2:	f6 cf       	rjmp	.-20     	; 0x16b0 <vfprintf+0x39a>
    16c4:	f6 01       	movw	r30, r12
    16c6:	86 81       	ldd	r24, Z+6	; 0x06
    16c8:	97 81       	ldd	r25, Z+7	; 0x07
    16ca:	02 c0       	rjmp	.+4      	; 0x16d0 <vfprintf+0x3ba>
    16cc:	8f ef       	ldi	r24, 0xFF	; 255
    16ce:	9f ef       	ldi	r25, 0xFF	; 255
    16d0:	2b 96       	adiw	r28, 0x0b	; 11
    16d2:	e2 e1       	ldi	r30, 0x12	; 18
    16d4:	0c 94 48 0c 	jmp	0x1890	; 0x1890 <__epilogue_restores__>

000016d8 <strnlen_P>:
    16d8:	fc 01       	movw	r30, r24
    16da:	05 90       	lpm	r0, Z+
    16dc:	61 50       	subi	r22, 0x01	; 1
    16de:	70 40       	sbci	r23, 0x00	; 0
    16e0:	01 10       	cpse	r0, r1
    16e2:	d8 f7       	brcc	.-10     	; 0x16da <strnlen_P+0x2>
    16e4:	80 95       	com	r24
    16e6:	90 95       	com	r25
    16e8:	8e 0f       	add	r24, r30
    16ea:	9f 1f       	adc	r25, r31
    16ec:	08 95       	ret

000016ee <strnlen>:
    16ee:	fc 01       	movw	r30, r24
    16f0:	61 50       	subi	r22, 0x01	; 1
    16f2:	70 40       	sbci	r23, 0x00	; 0
    16f4:	01 90       	ld	r0, Z+
    16f6:	01 10       	cpse	r0, r1
    16f8:	d8 f7       	brcc	.-10     	; 0x16f0 <strnlen+0x2>
    16fa:	80 95       	com	r24
    16fc:	90 95       	com	r25
    16fe:	8e 0f       	add	r24, r30
    1700:	9f 1f       	adc	r25, r31
    1702:	08 95       	ret

00001704 <strrev>:
    1704:	dc 01       	movw	r26, r24
    1706:	fc 01       	movw	r30, r24
    1708:	67 2f       	mov	r22, r23
    170a:	71 91       	ld	r23, Z+
    170c:	77 23       	and	r23, r23
    170e:	e1 f7       	brne	.-8      	; 0x1708 <strrev+0x4>
    1710:	32 97       	sbiw	r30, 0x02	; 2
    1712:	04 c0       	rjmp	.+8      	; 0x171c <strrev+0x18>
    1714:	7c 91       	ld	r23, X
    1716:	6d 93       	st	X+, r22
    1718:	70 83       	st	Z, r23
    171a:	62 91       	ld	r22, -Z
    171c:	ae 17       	cp	r26, r30
    171e:	bf 07       	cpc	r27, r31
    1720:	c8 f3       	brcs	.-14     	; 0x1714 <strrev+0x10>
    1722:	08 95       	ret

00001724 <fputc>:
    1724:	0f 93       	push	r16
    1726:	1f 93       	push	r17
    1728:	cf 93       	push	r28
    172a:	df 93       	push	r29
    172c:	fb 01       	movw	r30, r22
    172e:	23 81       	ldd	r18, Z+3	; 0x03
    1730:	21 fd       	sbrc	r18, 1
    1732:	03 c0       	rjmp	.+6      	; 0x173a <fputc+0x16>
    1734:	8f ef       	ldi	r24, 0xFF	; 255
    1736:	9f ef       	ldi	r25, 0xFF	; 255
    1738:	2c c0       	rjmp	.+88     	; 0x1792 <fputc+0x6e>
    173a:	22 ff       	sbrs	r18, 2
    173c:	16 c0       	rjmp	.+44     	; 0x176a <fputc+0x46>
    173e:	46 81       	ldd	r20, Z+6	; 0x06
    1740:	57 81       	ldd	r21, Z+7	; 0x07
    1742:	24 81       	ldd	r18, Z+4	; 0x04
    1744:	35 81       	ldd	r19, Z+5	; 0x05
    1746:	42 17       	cp	r20, r18
    1748:	53 07       	cpc	r21, r19
    174a:	44 f4       	brge	.+16     	; 0x175c <fputc+0x38>
    174c:	a0 81       	ld	r26, Z
    174e:	b1 81       	ldd	r27, Z+1	; 0x01
    1750:	9d 01       	movw	r18, r26
    1752:	2f 5f       	subi	r18, 0xFF	; 255
    1754:	3f 4f       	sbci	r19, 0xFF	; 255
    1756:	31 83       	std	Z+1, r19	; 0x01
    1758:	20 83       	st	Z, r18
    175a:	8c 93       	st	X, r24
    175c:	26 81       	ldd	r18, Z+6	; 0x06
    175e:	37 81       	ldd	r19, Z+7	; 0x07
    1760:	2f 5f       	subi	r18, 0xFF	; 255
    1762:	3f 4f       	sbci	r19, 0xFF	; 255
    1764:	37 83       	std	Z+7, r19	; 0x07
    1766:	26 83       	std	Z+6, r18	; 0x06
    1768:	14 c0       	rjmp	.+40     	; 0x1792 <fputc+0x6e>
    176a:	8b 01       	movw	r16, r22
    176c:	ec 01       	movw	r28, r24
    176e:	fb 01       	movw	r30, r22
    1770:	00 84       	ldd	r0, Z+8	; 0x08
    1772:	f1 85       	ldd	r31, Z+9	; 0x09
    1774:	e0 2d       	mov	r30, r0
    1776:	09 95       	icall
    1778:	89 2b       	or	r24, r25
    177a:	e1 f6       	brne	.-72     	; 0x1734 <fputc+0x10>
    177c:	d8 01       	movw	r26, r16
    177e:	16 96       	adiw	r26, 0x06	; 6
    1780:	8d 91       	ld	r24, X+
    1782:	9c 91       	ld	r25, X
    1784:	17 97       	sbiw	r26, 0x07	; 7
    1786:	01 96       	adiw	r24, 0x01	; 1
    1788:	17 96       	adiw	r26, 0x07	; 7
    178a:	9c 93       	st	X, r25
    178c:	8e 93       	st	-X, r24
    178e:	16 97       	sbiw	r26, 0x06	; 6
    1790:	ce 01       	movw	r24, r28
    1792:	df 91       	pop	r29
    1794:	cf 91       	pop	r28
    1796:	1f 91       	pop	r17
    1798:	0f 91       	pop	r16
    179a:	08 95       	ret

0000179c <__ultoa_invert>:
    179c:	fa 01       	movw	r30, r20
    179e:	aa 27       	eor	r26, r26
    17a0:	28 30       	cpi	r18, 0x08	; 8
    17a2:	51 f1       	breq	.+84     	; 0x17f8 <__ultoa_invert+0x5c>
    17a4:	20 31       	cpi	r18, 0x10	; 16
    17a6:	81 f1       	breq	.+96     	; 0x1808 <__ultoa_invert+0x6c>
    17a8:	e8 94       	clt
    17aa:	6f 93       	push	r22
    17ac:	6e 7f       	andi	r22, 0xFE	; 254
    17ae:	6e 5f       	subi	r22, 0xFE	; 254
    17b0:	7f 4f       	sbci	r23, 0xFF	; 255
    17b2:	8f 4f       	sbci	r24, 0xFF	; 255
    17b4:	9f 4f       	sbci	r25, 0xFF	; 255
    17b6:	af 4f       	sbci	r26, 0xFF	; 255
    17b8:	b1 e0       	ldi	r27, 0x01	; 1
    17ba:	3e d0       	rcall	.+124    	; 0x1838 <__ultoa_invert+0x9c>
    17bc:	b4 e0       	ldi	r27, 0x04	; 4
    17be:	3c d0       	rcall	.+120    	; 0x1838 <__ultoa_invert+0x9c>
    17c0:	67 0f       	add	r22, r23
    17c2:	78 1f       	adc	r23, r24
    17c4:	89 1f       	adc	r24, r25
    17c6:	9a 1f       	adc	r25, r26
    17c8:	a1 1d       	adc	r26, r1
    17ca:	68 0f       	add	r22, r24
    17cc:	79 1f       	adc	r23, r25
    17ce:	8a 1f       	adc	r24, r26
    17d0:	91 1d       	adc	r25, r1
    17d2:	a1 1d       	adc	r26, r1
    17d4:	6a 0f       	add	r22, r26
    17d6:	71 1d       	adc	r23, r1
    17d8:	81 1d       	adc	r24, r1
    17da:	91 1d       	adc	r25, r1
    17dc:	a1 1d       	adc	r26, r1
    17de:	20 d0       	rcall	.+64     	; 0x1820 <__ultoa_invert+0x84>
    17e0:	09 f4       	brne	.+2      	; 0x17e4 <__ultoa_invert+0x48>
    17e2:	68 94       	set
    17e4:	3f 91       	pop	r19
    17e6:	2a e0       	ldi	r18, 0x0A	; 10
    17e8:	26 9f       	mul	r18, r22
    17ea:	11 24       	eor	r1, r1
    17ec:	30 19       	sub	r19, r0
    17ee:	30 5d       	subi	r19, 0xD0	; 208
    17f0:	31 93       	st	Z+, r19
    17f2:	de f6       	brtc	.-74     	; 0x17aa <__ultoa_invert+0xe>
    17f4:	cf 01       	movw	r24, r30
    17f6:	08 95       	ret
    17f8:	46 2f       	mov	r20, r22
    17fa:	47 70       	andi	r20, 0x07	; 7
    17fc:	40 5d       	subi	r20, 0xD0	; 208
    17fe:	41 93       	st	Z+, r20
    1800:	b3 e0       	ldi	r27, 0x03	; 3
    1802:	0f d0       	rcall	.+30     	; 0x1822 <__ultoa_invert+0x86>
    1804:	c9 f7       	brne	.-14     	; 0x17f8 <__ultoa_invert+0x5c>
    1806:	f6 cf       	rjmp	.-20     	; 0x17f4 <__ultoa_invert+0x58>
    1808:	46 2f       	mov	r20, r22
    180a:	4f 70       	andi	r20, 0x0F	; 15
    180c:	40 5d       	subi	r20, 0xD0	; 208
    180e:	4a 33       	cpi	r20, 0x3A	; 58
    1810:	18 f0       	brcs	.+6      	; 0x1818 <__ultoa_invert+0x7c>
    1812:	49 5d       	subi	r20, 0xD9	; 217
    1814:	31 fd       	sbrc	r19, 1
    1816:	40 52       	subi	r20, 0x20	; 32
    1818:	41 93       	st	Z+, r20
    181a:	02 d0       	rcall	.+4      	; 0x1820 <__ultoa_invert+0x84>
    181c:	a9 f7       	brne	.-22     	; 0x1808 <__ultoa_invert+0x6c>
    181e:	ea cf       	rjmp	.-44     	; 0x17f4 <__ultoa_invert+0x58>
    1820:	b4 e0       	ldi	r27, 0x04	; 4
    1822:	a6 95       	lsr	r26
    1824:	97 95       	ror	r25
    1826:	87 95       	ror	r24
    1828:	77 95       	ror	r23
    182a:	67 95       	ror	r22
    182c:	ba 95       	dec	r27
    182e:	c9 f7       	brne	.-14     	; 0x1822 <__ultoa_invert+0x86>
    1830:	00 97       	sbiw	r24, 0x00	; 0
    1832:	61 05       	cpc	r22, r1
    1834:	71 05       	cpc	r23, r1
    1836:	08 95       	ret
    1838:	9b 01       	movw	r18, r22
    183a:	ac 01       	movw	r20, r24
    183c:	0a 2e       	mov	r0, r26
    183e:	06 94       	lsr	r0
    1840:	57 95       	ror	r21
    1842:	47 95       	ror	r20
    1844:	37 95       	ror	r19
    1846:	27 95       	ror	r18
    1848:	ba 95       	dec	r27
    184a:	c9 f7       	brne	.-14     	; 0x183e <__ultoa_invert+0xa2>
    184c:	62 0f       	add	r22, r18
    184e:	73 1f       	adc	r23, r19
    1850:	84 1f       	adc	r24, r20
    1852:	95 1f       	adc	r25, r21
    1854:	a0 1d       	adc	r26, r0
    1856:	08 95       	ret

00001858 <__prologue_saves__>:
    1858:	2f 92       	push	r2
    185a:	3f 92       	push	r3
    185c:	4f 92       	push	r4
    185e:	5f 92       	push	r5
    1860:	6f 92       	push	r6
    1862:	7f 92       	push	r7
    1864:	8f 92       	push	r8
    1866:	9f 92       	push	r9
    1868:	af 92       	push	r10
    186a:	bf 92       	push	r11
    186c:	cf 92       	push	r12
    186e:	df 92       	push	r13
    1870:	ef 92       	push	r14
    1872:	ff 92       	push	r15
    1874:	0f 93       	push	r16
    1876:	1f 93       	push	r17
    1878:	cf 93       	push	r28
    187a:	df 93       	push	r29
    187c:	cd b7       	in	r28, 0x3d	; 61
    187e:	de b7       	in	r29, 0x3e	; 62
    1880:	ca 1b       	sub	r28, r26
    1882:	db 0b       	sbc	r29, r27
    1884:	0f b6       	in	r0, 0x3f	; 63
    1886:	f8 94       	cli
    1888:	de bf       	out	0x3e, r29	; 62
    188a:	0f be       	out	0x3f, r0	; 63
    188c:	cd bf       	out	0x3d, r28	; 61
    188e:	09 94       	ijmp

00001890 <__epilogue_restores__>:
    1890:	2a 88       	ldd	r2, Y+18	; 0x12
    1892:	39 88       	ldd	r3, Y+17	; 0x11
    1894:	48 88       	ldd	r4, Y+16	; 0x10
    1896:	5f 84       	ldd	r5, Y+15	; 0x0f
    1898:	6e 84       	ldd	r6, Y+14	; 0x0e
    189a:	7d 84       	ldd	r7, Y+13	; 0x0d
    189c:	8c 84       	ldd	r8, Y+12	; 0x0c
    189e:	9b 84       	ldd	r9, Y+11	; 0x0b
    18a0:	aa 84       	ldd	r10, Y+10	; 0x0a
    18a2:	b9 84       	ldd	r11, Y+9	; 0x09
    18a4:	c8 84       	ldd	r12, Y+8	; 0x08
    18a6:	df 80       	ldd	r13, Y+7	; 0x07
    18a8:	ee 80       	ldd	r14, Y+6	; 0x06
    18aa:	fd 80       	ldd	r15, Y+5	; 0x05
    18ac:	0c 81       	ldd	r16, Y+4	; 0x04
    18ae:	1b 81       	ldd	r17, Y+3	; 0x03
    18b0:	aa 81       	ldd	r26, Y+2	; 0x02
    18b2:	b9 81       	ldd	r27, Y+1	; 0x01
    18b4:	ce 0f       	add	r28, r30
    18b6:	d1 1d       	adc	r29, r1
    18b8:	0f b6       	in	r0, 0x3f	; 63
    18ba:	f8 94       	cli
    18bc:	de bf       	out	0x3e, r29	; 62
    18be:	0f be       	out	0x3f, r0	; 63
    18c0:	cd bf       	out	0x3d, r28	; 61
    18c2:	ed 01       	movw	r28, r26
    18c4:	08 95       	ret

000018c6 <_exit>:
    18c6:	f8 94       	cli

000018c8 <__stop_program>:
    18c8:	ff cf       	rjmp	.-2      	; 0x18c8 <__stop_program>
